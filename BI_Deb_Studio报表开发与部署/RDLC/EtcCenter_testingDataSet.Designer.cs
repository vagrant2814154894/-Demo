//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8762
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace RDLC {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EtcCenter_testingDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EtcCenter_testingDataSet : global::System.Data.DataSet {
        
        private GA_DebitVehicleDataTable tableGA_DebitVehicle;
        
        private ETC_OutVehicleDataTable tableETC_OutVehicle;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EtcCenter_testingDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EtcCenter_testingDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GA_DebitVehicle"] != null)) {
                    base.Tables.Add(new GA_DebitVehicleDataTable(ds.Tables["GA_DebitVehicle"]));
                }
                if ((ds.Tables["ETC_OutVehicle"] != null)) {
                    base.Tables.Add(new ETC_OutVehicleDataTable(ds.Tables["ETC_OutVehicle"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GA_DebitVehicleDataTable GA_DebitVehicle {
            get {
                return this.tableGA_DebitVehicle;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ETC_OutVehicleDataTable ETC_OutVehicle {
            get {
                return this.tableETC_OutVehicle;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EtcCenter_testingDataSet cln = ((EtcCenter_testingDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GA_DebitVehicle"] != null)) {
                    base.Tables.Add(new GA_DebitVehicleDataTable(ds.Tables["GA_DebitVehicle"]));
                }
                if ((ds.Tables["ETC_OutVehicle"] != null)) {
                    base.Tables.Add(new ETC_OutVehicleDataTable(ds.Tables["ETC_OutVehicle"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGA_DebitVehicle = ((GA_DebitVehicleDataTable)(base.Tables["GA_DebitVehicle"]));
            if ((initTable == true)) {
                if ((this.tableGA_DebitVehicle != null)) {
                    this.tableGA_DebitVehicle.InitVars();
                }
            }
            this.tableETC_OutVehicle = ((ETC_OutVehicleDataTable)(base.Tables["ETC_OutVehicle"]));
            if ((initTable == true)) {
                if ((this.tableETC_OutVehicle != null)) {
                    this.tableETC_OutVehicle.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EtcCenter_testingDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EtcCenter_testingDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGA_DebitVehicle = new GA_DebitVehicleDataTable();
            base.Tables.Add(this.tableGA_DebitVehicle);
            this.tableETC_OutVehicle = new ETC_OutVehicleDataTable();
            base.Tables.Add(this.tableETC_OutVehicle);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGA_DebitVehicle() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeETC_OutVehicle() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EtcCenter_testingDataSet ds = new EtcCenter_testingDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GA_DebitVehicleRowChangeEventHandler(object sender, GA_DebitVehicleRowChangeEvent e);
        
        public delegate void ETC_OutVehicleRowChangeEventHandler(object sender, ETC_OutVehicleRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GA_DebitVehicleDataTable : global::System.Data.TypedTableBase<GA_DebitVehicleRow> {
            
            private global::System.Data.DataColumn columnCP;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnOperateTime;
            
            private global::System.Data.DataColumn columnDebitCardNum;
            
            private global::System.Data.DataColumn columnDebitVersionNum;
            
            private global::System.Data.DataColumn columnVerifyCode;
            
            private global::System.Data.DataColumn columnOrgID;
            
            private global::System.Data.DataColumn columnOperatorNum;
            
            private global::System.Data.DataColumn columnCheckOperatorNum;
            
            private global::System.Data.DataColumn columnRecordTime;
            
            private global::System.Data.DataColumn columnCheckTime;
            
            private global::System.Data.DataColumn columnIsCheck;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnSendFlag;
            
            private global::System.Data.DataColumn columnDebitType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GA_DebitVehicleDataTable() {
                this.TableName = "GA_DebitVehicle";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GA_DebitVehicleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GA_DebitVehicleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPColumn {
                get {
                    return this.columnCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperateTimeColumn {
                get {
                    return this.columnOperateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitCardNumColumn {
                get {
                    return this.columnDebitCardNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitVersionNumColumn {
                get {
                    return this.columnDebitVersionNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerifyCodeColumn {
                get {
                    return this.columnVerifyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrgIDColumn {
                get {
                    return this.columnOrgID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperatorNumColumn {
                get {
                    return this.columnOperatorNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckOperatorNumColumn {
                get {
                    return this.columnCheckOperatorNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordTimeColumn {
                get {
                    return this.columnRecordTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckTimeColumn {
                get {
                    return this.columnCheckTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCheckColumn {
                get {
                    return this.columnIsCheck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SendFlagColumn {
                get {
                    return this.columnSendFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitTypeColumn {
                get {
                    return this.columnDebitType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GA_DebitVehicleRow this[int index] {
                get {
                    return ((GA_DebitVehicleRow)(this.Rows[index]));
                }
            }
            
            public event GA_DebitVehicleRowChangeEventHandler GA_DebitVehicleRowChanging;
            
            public event GA_DebitVehicleRowChangeEventHandler GA_DebitVehicleRowChanged;
            
            public event GA_DebitVehicleRowChangeEventHandler GA_DebitVehicleRowDeleting;
            
            public event GA_DebitVehicleRowChangeEventHandler GA_DebitVehicleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGA_DebitVehicleRow(GA_DebitVehicleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GA_DebitVehicleRow AddGA_DebitVehicleRow(
                        string CP, 
                        System.DateTime StartTime, 
                        System.DateTime EndTime, 
                        System.DateTime OperateTime, 
                        string DebitCardNum, 
                        int DebitVersionNum, 
                        int VerifyCode, 
                        string OrgID, 
                        string OperatorNum, 
                        string CheckOperatorNum, 
                        System.DateTime RecordTime, 
                        System.DateTime CheckTime, 
                        byte IsCheck, 
                        string Memo, 
                        byte SendFlag, 
                        int DebitType) {
                GA_DebitVehicleRow rowGA_DebitVehicleRow = ((GA_DebitVehicleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CP,
                        StartTime,
                        EndTime,
                        OperateTime,
                        DebitCardNum,
                        DebitVersionNum,
                        VerifyCode,
                        OrgID,
                        OperatorNum,
                        CheckOperatorNum,
                        RecordTime,
                        CheckTime,
                        IsCheck,
                        Memo,
                        SendFlag,
                        DebitType};
                rowGA_DebitVehicleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGA_DebitVehicleRow);
                return rowGA_DebitVehicleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GA_DebitVehicleRow FindByCPDebitCardNumDebitType(string CP, string DebitCardNum, int DebitType) {
                return ((GA_DebitVehicleRow)(this.Rows.Find(new object[] {
                            CP,
                            DebitCardNum,
                            DebitType})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GA_DebitVehicleDataTable cln = ((GA_DebitVehicleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GA_DebitVehicleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCP = base.Columns["CP"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnOperateTime = base.Columns["OperateTime"];
                this.columnDebitCardNum = base.Columns["DebitCardNum"];
                this.columnDebitVersionNum = base.Columns["DebitVersionNum"];
                this.columnVerifyCode = base.Columns["VerifyCode"];
                this.columnOrgID = base.Columns["OrgID"];
                this.columnOperatorNum = base.Columns["OperatorNum"];
                this.columnCheckOperatorNum = base.Columns["CheckOperatorNum"];
                this.columnRecordTime = base.Columns["RecordTime"];
                this.columnCheckTime = base.Columns["CheckTime"];
                this.columnIsCheck = base.Columns["IsCheck"];
                this.columnMemo = base.Columns["Memo"];
                this.columnSendFlag = base.Columns["SendFlag"];
                this.columnDebitType = base.Columns["DebitType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCP = new global::System.Data.DataColumn("CP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCP);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnOperateTime = new global::System.Data.DataColumn("OperateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperateTime);
                this.columnDebitCardNum = new global::System.Data.DataColumn("DebitCardNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitCardNum);
                this.columnDebitVersionNum = new global::System.Data.DataColumn("DebitVersionNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitVersionNum);
                this.columnVerifyCode = new global::System.Data.DataColumn("VerifyCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerifyCode);
                this.columnOrgID = new global::System.Data.DataColumn("OrgID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgID);
                this.columnOperatorNum = new global::System.Data.DataColumn("OperatorNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperatorNum);
                this.columnCheckOperatorNum = new global::System.Data.DataColumn("CheckOperatorNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckOperatorNum);
                this.columnRecordTime = new global::System.Data.DataColumn("RecordTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordTime);
                this.columnCheckTime = new global::System.Data.DataColumn("CheckTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckTime);
                this.columnIsCheck = new global::System.Data.DataColumn("IsCheck", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCheck);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnSendFlag = new global::System.Data.DataColumn("SendFlag", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSendFlag);
                this.columnDebitType = new global::System.Data.DataColumn("DebitType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCP,
                                this.columnDebitCardNum,
                                this.columnDebitType}, true));
                this.columnCP.AllowDBNull = false;
                this.columnCP.MaxLength = 14;
                this.columnDebitCardNum.AllowDBNull = false;
                this.columnDebitCardNum.MaxLength = 30;
                this.columnOrgID.MaxLength = 4;
                this.columnOperatorNum.MaxLength = 30;
                this.columnCheckOperatorNum.MaxLength = 30;
                this.columnMemo.MaxLength = 500;
                this.columnDebitType.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GA_DebitVehicleRow NewGA_DebitVehicleRow() {
                return ((GA_DebitVehicleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GA_DebitVehicleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GA_DebitVehicleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GA_DebitVehicleRowChanged != null)) {
                    this.GA_DebitVehicleRowChanged(this, new GA_DebitVehicleRowChangeEvent(((GA_DebitVehicleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GA_DebitVehicleRowChanging != null)) {
                    this.GA_DebitVehicleRowChanging(this, new GA_DebitVehicleRowChangeEvent(((GA_DebitVehicleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GA_DebitVehicleRowDeleted != null)) {
                    this.GA_DebitVehicleRowDeleted(this, new GA_DebitVehicleRowChangeEvent(((GA_DebitVehicleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GA_DebitVehicleRowDeleting != null)) {
                    this.GA_DebitVehicleRowDeleting(this, new GA_DebitVehicleRowChangeEvent(((GA_DebitVehicleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGA_DebitVehicleRow(GA_DebitVehicleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EtcCenter_testingDataSet ds = new EtcCenter_testingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GA_DebitVehicleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ETC_OutVehicleDataTable : global::System.Data.TypedTableBase<ETC_OutVehicleRow> {
            
            private global::System.Data.DataColumn columnDutyDate;
            
            private global::System.Data.DataColumn columnOperatorNum;
            
            private global::System.Data.DataColumn columnStationID;
            
            private global::System.Data.DataColumn columnRoadNum;
            
            private global::System.Data.DataColumn columnReachDateTime;
            
            private global::System.Data.DataColumn columnVehicleID;
            
            private global::System.Data.DataColumn columnFreeType;
            
            private global::System.Data.DataColumn columnFreeDes;
            
            private global::System.Data.DataColumn columnSpecialType;
            
            private global::System.Data.DataColumn columnImageIndex;
            
            private global::System.Data.DataColumn columnCardType;
            
            private global::System.Data.DataColumn columnCardNum;
            
            private global::System.Data.DataColumn columnInStationID;
            
            private global::System.Data.DataColumn columnInStationName;
            
            private global::System.Data.DataColumn columnPassFee;
            
            private global::System.Data.DataColumn columnPrePayCash;
            
            private global::System.Data.DataColumn columnRKCP;
            
            private global::System.Data.DataColumn columnCKCP;
            
            private global::System.Data.DataColumn columnBillNum;
            
            private global::System.Data.DataColumn columnErrorBillSymbol;
            
            private global::System.Data.DataColumn columnInstationTime;
            
            private global::System.Data.DataColumn columnChangedFee;
            
            private global::System.Data.DataColumn columnOperatorName;
            
            private global::System.Data.DataColumn columnStationName;
            
            private global::System.Data.DataColumn columnSCID;
            
            private global::System.Data.DataColumn columnSCNAME;
            
            private global::System.Data.DataColumn columnZS;
            
            private global::System.Data.DataColumn columnZZS;
            
            private global::System.Data.DataColumn columnZZX;
            
            private global::System.Data.DataColumn columnSFZZ;
            
            private global::System.Data.DataColumn columnZX;
            
            private global::System.Data.DataColumn columnCXBL;
            
            private global::System.Data.DataColumn columnChargeFlag;
            
            private global::System.Data.DataColumn columnIsUsed;
            
            private global::System.Data.DataColumn columnPayCardBalance;
            
            private global::System.Data.DataColumn columnETCTradeNo;
            
            private global::System.Data.DataColumn columnETCTac;
            
            private global::System.Data.DataColumn columnETCTermTradNo;
            
            private global::System.Data.DataColumn columnETCTermCode;
            
            private global::System.Data.DataColumn columnETCFlag;
            
            private global::System.Data.DataColumn columnCheckFlag;
            
            private global::System.Data.DataColumn columnSendFlag;
            
            private global::System.Data.DataColumn columnPayFlag;
            
            private global::System.Data.DataColumn columnPayDate;
            
            private global::System.Data.DataColumn columnEtcBillNum;
            
            private global::System.Data.DataColumn columnEtcBillYear;
            
            private global::System.Data.DataColumn columnDone;
            
            private global::System.Data.DataColumn columnmemo;
            
            private global::System.Data.DataColumn columnRebateType;
            
            private global::System.Data.DataColumn columnRebateFee;
            
            private global::System.Data.DataColumn columnobunum;
            
            private global::System.Data.DataColumn columnCaptureCP;
            
            private global::System.Data.DataColumn columnIsSync;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnBankAccountNum;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnRecordTruckFlag;
            
            private global::System.Data.DataColumn columnRecordVehicleID;
            
            private global::System.Data.DataColumn columnDealTime;
            
            private global::System.Data.DataColumn columnProvinceID;
            
            private global::System.Data.DataColumn columnBindCP;
            
            private global::System.Data.DataColumn columnRightPassfee;
            
            private global::System.Data.DataColumn columnTACFlag;
            
            private global::System.Data.DataColumn columnPaySign;
            
            private global::System.Data.DataColumn columnNetNo;
            
            private global::System.Data.DataColumn columnCardCP;
            
            private global::System.Data.DataColumn columnOBUID;
            
            private global::System.Data.DataColumn columnBankRebateInfo;
            
            private global::System.Data.DataColumn columnTaxFee;
            
            private global::System.Data.DataColumn columnInRoadNum;
            
            private global::System.Data.DataColumn columnFeeVerNum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ETC_OutVehicleDataTable() {
                this.TableName = "ETC_OutVehicle";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ETC_OutVehicleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ETC_OutVehicleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyDateColumn {
                get {
                    return this.columnDutyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperatorNumColumn {
                get {
                    return this.columnOperatorNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StationIDColumn {
                get {
                    return this.columnStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoadNumColumn {
                get {
                    return this.columnRoadNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReachDateTimeColumn {
                get {
                    return this.columnReachDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleIDColumn {
                get {
                    return this.columnVehicleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreeTypeColumn {
                get {
                    return this.columnFreeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreeDesColumn {
                get {
                    return this.columnFreeDes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialTypeColumn {
                get {
                    return this.columnSpecialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImageIndexColumn {
                get {
                    return this.columnImageIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardTypeColumn {
                get {
                    return this.columnCardType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardNumColumn {
                get {
                    return this.columnCardNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InStationIDColumn {
                get {
                    return this.columnInStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InStationNameColumn {
                get {
                    return this.columnInStationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PassFeeColumn {
                get {
                    return this.columnPassFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrePayCashColumn {
                get {
                    return this.columnPrePayCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RKCPColumn {
                get {
                    return this.columnRKCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CKCPColumn {
                get {
                    return this.columnCKCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillNumColumn {
                get {
                    return this.columnBillNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ErrorBillSymbolColumn {
                get {
                    return this.columnErrorBillSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstationTimeColumn {
                get {
                    return this.columnInstationTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedFeeColumn {
                get {
                    return this.columnChangedFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperatorNameColumn {
                get {
                    return this.columnOperatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StationNameColumn {
                get {
                    return this.columnStationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCIDColumn {
                get {
                    return this.columnSCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCNAMEColumn {
                get {
                    return this.columnSCNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZSColumn {
                get {
                    return this.columnZS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZZSColumn {
                get {
                    return this.columnZZS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZZXColumn {
                get {
                    return this.columnZZX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SFZZColumn {
                get {
                    return this.columnSFZZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZXColumn {
                get {
                    return this.columnZX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXBLColumn {
                get {
                    return this.columnCXBL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargeFlagColumn {
                get {
                    return this.columnChargeFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsUsedColumn {
                get {
                    return this.columnIsUsed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayCardBalanceColumn {
                get {
                    return this.columnPayCardBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETCTradeNoColumn {
                get {
                    return this.columnETCTradeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETCTacColumn {
                get {
                    return this.columnETCTac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETCTermTradNoColumn {
                get {
                    return this.columnETCTermTradNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETCTermCodeColumn {
                get {
                    return this.columnETCTermCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETCFlagColumn {
                get {
                    return this.columnETCFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckFlagColumn {
                get {
                    return this.columnCheckFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SendFlagColumn {
                get {
                    return this.columnSendFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayFlagColumn {
                get {
                    return this.columnPayFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayDateColumn {
                get {
                    return this.columnPayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtcBillNumColumn {
                get {
                    return this.columnEtcBillNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtcBillYearColumn {
                get {
                    return this.columnEtcBillYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoneColumn {
                get {
                    return this.columnDone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn memoColumn {
                get {
                    return this.columnmemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RebateTypeColumn {
                get {
                    return this.columnRebateType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RebateFeeColumn {
                get {
                    return this.columnRebateFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn obunumColumn {
                get {
                    return this.columnobunum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CaptureCPColumn {
                get {
                    return this.columnCaptureCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSyncColumn {
                get {
                    return this.columnIsSync;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankAccountNumColumn {
                get {
                    return this.columnBankAccountNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordTruckFlagColumn {
                get {
                    return this.columnRecordTruckFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordVehicleIDColumn {
                get {
                    return this.columnRecordVehicleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DealTimeColumn {
                get {
                    return this.columnDealTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvinceIDColumn {
                get {
                    return this.columnProvinceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BindCPColumn {
                get {
                    return this.columnBindCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RightPassfeeColumn {
                get {
                    return this.columnRightPassfee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TACFlagColumn {
                get {
                    return this.columnTACFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaySignColumn {
                get {
                    return this.columnPaySign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetNoColumn {
                get {
                    return this.columnNetNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardCPColumn {
                get {
                    return this.columnCardCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OBUIDColumn {
                get {
                    return this.columnOBUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankRebateInfoColumn {
                get {
                    return this.columnBankRebateInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxFeeColumn {
                get {
                    return this.columnTaxFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InRoadNumColumn {
                get {
                    return this.columnInRoadNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeeVerNumColumn {
                get {
                    return this.columnFeeVerNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ETC_OutVehicleRow this[int index] {
                get {
                    return ((ETC_OutVehicleRow)(this.Rows[index]));
                }
            }
            
            public event ETC_OutVehicleRowChangeEventHandler ETC_OutVehicleRowChanging;
            
            public event ETC_OutVehicleRowChangeEventHandler ETC_OutVehicleRowChanged;
            
            public event ETC_OutVehicleRowChangeEventHandler ETC_OutVehicleRowDeleting;
            
            public event ETC_OutVehicleRowChangeEventHandler ETC_OutVehicleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddETC_OutVehicleRow(ETC_OutVehicleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ETC_OutVehicleRow AddETC_OutVehicleRow(
                        System.DateTime DutyDate, 
                        string OperatorNum, 
                        string StationID, 
                        short RoadNum, 
                        System.DateTime ReachDateTime, 
                        short VehicleID, 
                        short FreeType, 
                        string FreeDes, 
                        short SpecialType, 
                        string ImageIndex, 
                        short CardType, 
                        string CardNum, 
                        string InStationID, 
                        string InStationName, 
                        decimal PassFee, 
                        decimal PrePayCash, 
                        string RKCP, 
                        string CKCP, 
                        int BillNum, 
                        short ErrorBillSymbol, 
                        System.DateTime InstationTime, 
                        decimal ChangedFee, 
                        string OperatorName, 
                        string StationName, 
                        string SCID, 
                        string SCNAME, 
                        short ZS, 
                        short ZZS, 
                        decimal ZZX, 
                        decimal SFZZ, 
                        string ZX, 
                        decimal CXBL, 
                        short ChargeFlag, 
                        short IsUsed, 
                        decimal PayCardBalance, 
                        int ETCTradeNo, 
                        string ETCTac, 
                        int ETCTermTradNo, 
                        string ETCTermCode, 
                        short ETCFlag, 
                        short CheckFlag, 
                        short SendFlag, 
                        short PayFlag, 
                        System.DateTime PayDate, 
                        int EtcBillNum, 
                        short EtcBillYear, 
                        byte Done, 
                        string memo, 
                        short RebateType, 
                        decimal RebateFee, 
                        string obunum, 
                        string CaptureCP, 
                        byte IsSync, 
                        string BankID, 
                        string BankAccountNum, 
                        string CustomerID, 
                        byte RecordTruckFlag, 
                        byte RecordVehicleID, 
                        System.DateTime DealTime, 
                        string ProvinceID, 
                        string BindCP, 
                        decimal RightPassfee, 
                        bool TACFlag, 
                        short PaySign, 
                        string NetNo, 
                        string CardCP, 
                        string OBUID, 
                        string BankRebateInfo, 
                        decimal TaxFee, 
                        short InRoadNum, 
                        short FeeVerNum) {
                ETC_OutVehicleRow rowETC_OutVehicleRow = ((ETC_OutVehicleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DutyDate,
                        OperatorNum,
                        StationID,
                        RoadNum,
                        ReachDateTime,
                        VehicleID,
                        FreeType,
                        FreeDes,
                        SpecialType,
                        ImageIndex,
                        CardType,
                        CardNum,
                        InStationID,
                        InStationName,
                        PassFee,
                        PrePayCash,
                        RKCP,
                        CKCP,
                        BillNum,
                        ErrorBillSymbol,
                        InstationTime,
                        ChangedFee,
                        OperatorName,
                        StationName,
                        SCID,
                        SCNAME,
                        ZS,
                        ZZS,
                        ZZX,
                        SFZZ,
                        ZX,
                        CXBL,
                        ChargeFlag,
                        IsUsed,
                        PayCardBalance,
                        ETCTradeNo,
                        ETCTac,
                        ETCTermTradNo,
                        ETCTermCode,
                        ETCFlag,
                        CheckFlag,
                        SendFlag,
                        PayFlag,
                        PayDate,
                        EtcBillNum,
                        EtcBillYear,
                        Done,
                        memo,
                        RebateType,
                        RebateFee,
                        obunum,
                        CaptureCP,
                        IsSync,
                        BankID,
                        BankAccountNum,
                        CustomerID,
                        RecordTruckFlag,
                        RecordVehicleID,
                        DealTime,
                        ProvinceID,
                        BindCP,
                        RightPassfee,
                        TACFlag,
                        PaySign,
                        NetNo,
                        CardCP,
                        OBUID,
                        BankRebateInfo,
                        TaxFee,
                        InRoadNum,
                        FeeVerNum};
                rowETC_OutVehicleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowETC_OutVehicleRow);
                return rowETC_OutVehicleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ETC_OutVehicleRow FindByStationIDRoadNumReachDateTimeCardNumBillNumIsUsedETCFlag(string StationID, short RoadNum, System.DateTime ReachDateTime, string CardNum, int BillNum, short IsUsed, short ETCFlag) {
                return ((ETC_OutVehicleRow)(this.Rows.Find(new object[] {
                            StationID,
                            RoadNum,
                            ReachDateTime,
                            CardNum,
                            BillNum,
                            IsUsed,
                            ETCFlag})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ETC_OutVehicleDataTable cln = ((ETC_OutVehicleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ETC_OutVehicleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDutyDate = base.Columns["DutyDate"];
                this.columnOperatorNum = base.Columns["OperatorNum"];
                this.columnStationID = base.Columns["StationID"];
                this.columnRoadNum = base.Columns["RoadNum"];
                this.columnReachDateTime = base.Columns["ReachDateTime"];
                this.columnVehicleID = base.Columns["VehicleID"];
                this.columnFreeType = base.Columns["FreeType"];
                this.columnFreeDes = base.Columns["FreeDes"];
                this.columnSpecialType = base.Columns["SpecialType"];
                this.columnImageIndex = base.Columns["ImageIndex"];
                this.columnCardType = base.Columns["CardType"];
                this.columnCardNum = base.Columns["CardNum"];
                this.columnInStationID = base.Columns["InStationID"];
                this.columnInStationName = base.Columns["InStationName"];
                this.columnPassFee = base.Columns["PassFee"];
                this.columnPrePayCash = base.Columns["PrePayCash"];
                this.columnRKCP = base.Columns["RKCP"];
                this.columnCKCP = base.Columns["CKCP"];
                this.columnBillNum = base.Columns["BillNum"];
                this.columnErrorBillSymbol = base.Columns["ErrorBillSymbol"];
                this.columnInstationTime = base.Columns["InstationTime"];
                this.columnChangedFee = base.Columns["ChangedFee"];
                this.columnOperatorName = base.Columns["OperatorName"];
                this.columnStationName = base.Columns["StationName"];
                this.columnSCID = base.Columns["SCID"];
                this.columnSCNAME = base.Columns["SCNAME"];
                this.columnZS = base.Columns["ZS"];
                this.columnZZS = base.Columns["ZZS"];
                this.columnZZX = base.Columns["ZZX"];
                this.columnSFZZ = base.Columns["SFZZ"];
                this.columnZX = base.Columns["ZX"];
                this.columnCXBL = base.Columns["CXBL"];
                this.columnChargeFlag = base.Columns["ChargeFlag"];
                this.columnIsUsed = base.Columns["IsUsed"];
                this.columnPayCardBalance = base.Columns["PayCardBalance"];
                this.columnETCTradeNo = base.Columns["ETCTradeNo"];
                this.columnETCTac = base.Columns["ETCTac"];
                this.columnETCTermTradNo = base.Columns["ETCTermTradNo"];
                this.columnETCTermCode = base.Columns["ETCTermCode"];
                this.columnETCFlag = base.Columns["ETCFlag"];
                this.columnCheckFlag = base.Columns["CheckFlag"];
                this.columnSendFlag = base.Columns["SendFlag"];
                this.columnPayFlag = base.Columns["PayFlag"];
                this.columnPayDate = base.Columns["PayDate"];
                this.columnEtcBillNum = base.Columns["EtcBillNum"];
                this.columnEtcBillYear = base.Columns["EtcBillYear"];
                this.columnDone = base.Columns["Done"];
                this.columnmemo = base.Columns["memo"];
                this.columnRebateType = base.Columns["RebateType"];
                this.columnRebateFee = base.Columns["RebateFee"];
                this.columnobunum = base.Columns["obunum"];
                this.columnCaptureCP = base.Columns["CaptureCP"];
                this.columnIsSync = base.Columns["IsSync"];
                this.columnBankID = base.Columns["BankID"];
                this.columnBankAccountNum = base.Columns["BankAccountNum"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnRecordTruckFlag = base.Columns["RecordTruckFlag"];
                this.columnRecordVehicleID = base.Columns["RecordVehicleID"];
                this.columnDealTime = base.Columns["DealTime"];
                this.columnProvinceID = base.Columns["ProvinceID"];
                this.columnBindCP = base.Columns["BindCP"];
                this.columnRightPassfee = base.Columns["RightPassfee"];
                this.columnTACFlag = base.Columns["TACFlag"];
                this.columnPaySign = base.Columns["PaySign"];
                this.columnNetNo = base.Columns["NetNo"];
                this.columnCardCP = base.Columns["CardCP"];
                this.columnOBUID = base.Columns["OBUID"];
                this.columnBankRebateInfo = base.Columns["BankRebateInfo"];
                this.columnTaxFee = base.Columns["TaxFee"];
                this.columnInRoadNum = base.Columns["InRoadNum"];
                this.columnFeeVerNum = base.Columns["FeeVerNum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDutyDate = new global::System.Data.DataColumn("DutyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyDate);
                this.columnOperatorNum = new global::System.Data.DataColumn("OperatorNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperatorNum);
                this.columnStationID = new global::System.Data.DataColumn("StationID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationID);
                this.columnRoadNum = new global::System.Data.DataColumn("RoadNum", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoadNum);
                this.columnReachDateTime = new global::System.Data.DataColumn("ReachDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReachDateTime);
                this.columnVehicleID = new global::System.Data.DataColumn("VehicleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleID);
                this.columnFreeType = new global::System.Data.DataColumn("FreeType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeType);
                this.columnFreeDes = new global::System.Data.DataColumn("FreeDes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeDes);
                this.columnSpecialType = new global::System.Data.DataColumn("SpecialType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialType);
                this.columnImageIndex = new global::System.Data.DataColumn("ImageIndex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageIndex);
                this.columnCardType = new global::System.Data.DataColumn("CardType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardType);
                this.columnCardNum = new global::System.Data.DataColumn("CardNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardNum);
                this.columnInStationID = new global::System.Data.DataColumn("InStationID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInStationID);
                this.columnInStationName = new global::System.Data.DataColumn("InStationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInStationName);
                this.columnPassFee = new global::System.Data.DataColumn("PassFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassFee);
                this.columnPrePayCash = new global::System.Data.DataColumn("PrePayCash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrePayCash);
                this.columnRKCP = new global::System.Data.DataColumn("RKCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRKCP);
                this.columnCKCP = new global::System.Data.DataColumn("CKCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCKCP);
                this.columnBillNum = new global::System.Data.DataColumn("BillNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillNum);
                this.columnErrorBillSymbol = new global::System.Data.DataColumn("ErrorBillSymbol", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorBillSymbol);
                this.columnInstationTime = new global::System.Data.DataColumn("InstationTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstationTime);
                this.columnChangedFee = new global::System.Data.DataColumn("ChangedFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedFee);
                this.columnOperatorName = new global::System.Data.DataColumn("OperatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperatorName);
                this.columnStationName = new global::System.Data.DataColumn("StationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationName);
                this.columnSCID = new global::System.Data.DataColumn("SCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCID);
                this.columnSCNAME = new global::System.Data.DataColumn("SCNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCNAME);
                this.columnZS = new global::System.Data.DataColumn("ZS", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZS);
                this.columnZZS = new global::System.Data.DataColumn("ZZS", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZZS);
                this.columnZZX = new global::System.Data.DataColumn("ZZX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZZX);
                this.columnSFZZ = new global::System.Data.DataColumn("SFZZ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSFZZ);
                this.columnZX = new global::System.Data.DataColumn("ZX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZX);
                this.columnCXBL = new global::System.Data.DataColumn("CXBL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXBL);
                this.columnChargeFlag = new global::System.Data.DataColumn("ChargeFlag", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargeFlag);
                this.columnIsUsed = new global::System.Data.DataColumn("IsUsed", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUsed);
                this.columnPayCardBalance = new global::System.Data.DataColumn("PayCardBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayCardBalance);
                this.columnETCTradeNo = new global::System.Data.DataColumn("ETCTradeNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETCTradeNo);
                this.columnETCTac = new global::System.Data.DataColumn("ETCTac", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETCTac);
                this.columnETCTermTradNo = new global::System.Data.DataColumn("ETCTermTradNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETCTermTradNo);
                this.columnETCTermCode = new global::System.Data.DataColumn("ETCTermCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETCTermCode);
                this.columnETCFlag = new global::System.Data.DataColumn("ETCFlag", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETCFlag);
                this.columnCheckFlag = new global::System.Data.DataColumn("CheckFlag", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckFlag);
                this.columnSendFlag = new global::System.Data.DataColumn("SendFlag", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSendFlag);
                this.columnPayFlag = new global::System.Data.DataColumn("PayFlag", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayFlag);
                this.columnPayDate = new global::System.Data.DataColumn("PayDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayDate);
                this.columnEtcBillNum = new global::System.Data.DataColumn("EtcBillNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtcBillNum);
                this.columnEtcBillYear = new global::System.Data.DataColumn("EtcBillYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtcBillYear);
                this.columnDone = new global::System.Data.DataColumn("Done", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDone);
                this.columnmemo = new global::System.Data.DataColumn("memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmemo);
                this.columnRebateType = new global::System.Data.DataColumn("RebateType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRebateType);
                this.columnRebateFee = new global::System.Data.DataColumn("RebateFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRebateFee);
                this.columnobunum = new global::System.Data.DataColumn("obunum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobunum);
                this.columnCaptureCP = new global::System.Data.DataColumn("CaptureCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaptureCP);
                this.columnIsSync = new global::System.Data.DataColumn("IsSync", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSync);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnBankAccountNum = new global::System.Data.DataColumn("BankAccountNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccountNum);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnRecordTruckFlag = new global::System.Data.DataColumn("RecordTruckFlag", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordTruckFlag);
                this.columnRecordVehicleID = new global::System.Data.DataColumn("RecordVehicleID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordVehicleID);
                this.columnDealTime = new global::System.Data.DataColumn("DealTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDealTime);
                this.columnProvinceID = new global::System.Data.DataColumn("ProvinceID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvinceID);
                this.columnBindCP = new global::System.Data.DataColumn("BindCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBindCP);
                this.columnRightPassfee = new global::System.Data.DataColumn("RightPassfee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRightPassfee);
                this.columnTACFlag = new global::System.Data.DataColumn("TACFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTACFlag);
                this.columnPaySign = new global::System.Data.DataColumn("PaySign", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaySign);
                this.columnNetNo = new global::System.Data.DataColumn("NetNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetNo);
                this.columnCardCP = new global::System.Data.DataColumn("CardCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardCP);
                this.columnOBUID = new global::System.Data.DataColumn("OBUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOBUID);
                this.columnBankRebateInfo = new global::System.Data.DataColumn("BankRebateInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankRebateInfo);
                this.columnTaxFee = new global::System.Data.DataColumn("TaxFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxFee);
                this.columnInRoadNum = new global::System.Data.DataColumn("InRoadNum", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInRoadNum);
                this.columnFeeVerNum = new global::System.Data.DataColumn("FeeVerNum", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeeVerNum);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStationID,
                                this.columnRoadNum,
                                this.columnReachDateTime,
                                this.columnCardNum,
                                this.columnBillNum,
                                this.columnIsUsed,
                                this.columnETCFlag}, true));
                this.columnDutyDate.AllowDBNull = false;
                this.columnOperatorNum.AllowDBNull = false;
                this.columnOperatorNum.MaxLength = 7;
                this.columnStationID.AllowDBNull = false;
                this.columnStationID.MaxLength = 4;
                this.columnRoadNum.AllowDBNull = false;
                this.columnReachDateTime.AllowDBNull = false;
                this.columnVehicleID.AllowDBNull = false;
                this.columnFreeType.AllowDBNull = false;
                this.columnFreeDes.MaxLength = 50;
                this.columnSpecialType.AllowDBNull = false;
                this.columnImageIndex.MaxLength = 35;
                this.columnCardType.AllowDBNull = false;
                this.columnCardNum.AllowDBNull = false;
                this.columnCardNum.MaxLength = 30;
                this.columnInStationID.AllowDBNull = false;
                this.columnInStationID.MaxLength = 4;
                this.columnInStationName.AllowDBNull = false;
                this.columnInStationName.MaxLength = 20;
                this.columnPassFee.AllowDBNull = false;
                this.columnRKCP.MaxLength = 14;
                this.columnCKCP.AllowDBNull = false;
                this.columnCKCP.MaxLength = 14;
                this.columnBillNum.AllowDBNull = false;
                this.columnErrorBillSymbol.AllowDBNull = false;
                this.columnChangedFee.AllowDBNull = false;
                this.columnOperatorName.AllowDBNull = false;
                this.columnOperatorName.MaxLength = 20;
                this.columnStationName.AllowDBNull = false;
                this.columnStationName.MaxLength = 20;
                this.columnSCID.AllowDBNull = false;
                this.columnSCID.MaxLength = 4;
                this.columnSCNAME.AllowDBNull = false;
                this.columnSCNAME.MaxLength = 20;
                this.columnZS.AllowDBNull = false;
                this.columnZZS.AllowDBNull = false;
                this.columnZZX.AllowDBNull = false;
                this.columnSFZZ.AllowDBNull = false;
                this.columnZX.AllowDBNull = false;
                this.columnZX.MaxLength = 50;
                this.columnChargeFlag.AllowDBNull = false;
                this.columnIsUsed.AllowDBNull = false;
                this.columnPayCardBalance.AllowDBNull = false;
                this.columnETCTac.MaxLength = 50;
                this.columnETCTermCode.MaxLength = 30;
                this.columnETCFlag.AllowDBNull = false;
                this.columnCheckFlag.AllowDBNull = false;
                this.columnSendFlag.AllowDBNull = false;
                this.columnPayFlag.AllowDBNull = false;
                this.columnEtcBillNum.AllowDBNull = false;
                this.columnEtcBillYear.AllowDBNull = false;
                this.columnDone.AllowDBNull = false;
                this.columnmemo.MaxLength = 200;
                this.columnobunum.AllowDBNull = false;
                this.columnobunum.MaxLength = 30;
                this.columnCaptureCP.AllowDBNull = false;
                this.columnCaptureCP.MaxLength = 14;
                this.columnBankID.MaxLength = 50;
                this.columnBankAccountNum.MaxLength = 50;
                this.columnCustomerID.MaxLength = 50;
                this.columnProvinceID.MaxLength = 20;
                this.columnBindCP.MaxLength = 15;
                this.columnPaySign.AllowDBNull = false;
                this.columnNetNo.MaxLength = 4;
                this.columnCardCP.MaxLength = 14;
                this.columnOBUID.MaxLength = 20;
                this.columnBankRebateInfo.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ETC_OutVehicleRow NewETC_OutVehicleRow() {
                return ((ETC_OutVehicleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ETC_OutVehicleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ETC_OutVehicleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ETC_OutVehicleRowChanged != null)) {
                    this.ETC_OutVehicleRowChanged(this, new ETC_OutVehicleRowChangeEvent(((ETC_OutVehicleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ETC_OutVehicleRowChanging != null)) {
                    this.ETC_OutVehicleRowChanging(this, new ETC_OutVehicleRowChangeEvent(((ETC_OutVehicleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ETC_OutVehicleRowDeleted != null)) {
                    this.ETC_OutVehicleRowDeleted(this, new ETC_OutVehicleRowChangeEvent(((ETC_OutVehicleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ETC_OutVehicleRowDeleting != null)) {
                    this.ETC_OutVehicleRowDeleting(this, new ETC_OutVehicleRowChangeEvent(((ETC_OutVehicleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveETC_OutVehicleRow(ETC_OutVehicleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EtcCenter_testingDataSet ds = new EtcCenter_testingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ETC_OutVehicleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GA_DebitVehicleRow : global::System.Data.DataRow {
            
            private GA_DebitVehicleDataTable tableGA_DebitVehicle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GA_DebitVehicleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGA_DebitVehicle = ((GA_DebitVehicleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CP {
                get {
                    return ((string)(this[this.tableGA_DebitVehicle.CPColumn]));
                }
                set {
                    this[this.tableGA_DebitVehicle.CPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGA_DebitVehicle.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“StartTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGA_DebitVehicle.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“EndTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OperateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGA_DebitVehicle.OperateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“OperateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.OperateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitCardNum {
                get {
                    return ((string)(this[this.tableGA_DebitVehicle.DebitCardNumColumn]));
                }
                set {
                    this[this.tableGA_DebitVehicle.DebitCardNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DebitVersionNum {
                get {
                    try {
                        return ((int)(this[this.tableGA_DebitVehicle.DebitVersionNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“DebitVersionNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.DebitVersionNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VerifyCode {
                get {
                    try {
                        return ((int)(this[this.tableGA_DebitVehicle.VerifyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“VerifyCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.VerifyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrgID {
                get {
                    try {
                        return ((string)(this[this.tableGA_DebitVehicle.OrgIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“OrgID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.OrgIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OperatorNum {
                get {
                    try {
                        return ((string)(this[this.tableGA_DebitVehicle.OperatorNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“OperatorNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.OperatorNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CheckOperatorNum {
                get {
                    try {
                        return ((string)(this[this.tableGA_DebitVehicle.CheckOperatorNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“CheckOperatorNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.CheckOperatorNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RecordTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGA_DebitVehicle.RecordTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“RecordTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.RecordTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CheckTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGA_DebitVehicle.CheckTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“CheckTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.CheckTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte IsCheck {
                get {
                    try {
                        return ((byte)(this[this.tableGA_DebitVehicle.IsCheckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“IsCheck”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.IsCheckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tableGA_DebitVehicle.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“Memo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte SendFlag {
                get {
                    try {
                        return ((byte)(this[this.tableGA_DebitVehicle.SendFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GA_DebitVehicle”中列“SendFlag”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGA_DebitVehicle.SendFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DebitType {
                get {
                    return ((int)(this[this.tableGA_DebitVehicle.DebitTypeColumn]));
                }
                set {
                    this[this.tableGA_DebitVehicle.DebitTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableGA_DebitVehicle.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableGA_DebitVehicle.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableGA_DebitVehicle.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableGA_DebitVehicle.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperateTimeNull() {
                return this.IsNull(this.tableGA_DebitVehicle.OperateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperateTimeNull() {
                this[this.tableGA_DebitVehicle.OperateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitVersionNumNull() {
                return this.IsNull(this.tableGA_DebitVehicle.DebitVersionNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitVersionNumNull() {
                this[this.tableGA_DebitVehicle.DebitVersionNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerifyCodeNull() {
                return this.IsNull(this.tableGA_DebitVehicle.VerifyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerifyCodeNull() {
                this[this.tableGA_DebitVehicle.VerifyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrgIDNull() {
                return this.IsNull(this.tableGA_DebitVehicle.OrgIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrgIDNull() {
                this[this.tableGA_DebitVehicle.OrgIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperatorNumNull() {
                return this.IsNull(this.tableGA_DebitVehicle.OperatorNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperatorNumNull() {
                this[this.tableGA_DebitVehicle.OperatorNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckOperatorNumNull() {
                return this.IsNull(this.tableGA_DebitVehicle.CheckOperatorNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckOperatorNumNull() {
                this[this.tableGA_DebitVehicle.CheckOperatorNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordTimeNull() {
                return this.IsNull(this.tableGA_DebitVehicle.RecordTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordTimeNull() {
                this[this.tableGA_DebitVehicle.RecordTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckTimeNull() {
                return this.IsNull(this.tableGA_DebitVehicle.CheckTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckTimeNull() {
                this[this.tableGA_DebitVehicle.CheckTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCheckNull() {
                return this.IsNull(this.tableGA_DebitVehicle.IsCheckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCheckNull() {
                this[this.tableGA_DebitVehicle.IsCheckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoNull() {
                return this.IsNull(this.tableGA_DebitVehicle.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoNull() {
                this[this.tableGA_DebitVehicle.MemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSendFlagNull() {
                return this.IsNull(this.tableGA_DebitVehicle.SendFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSendFlagNull() {
                this[this.tableGA_DebitVehicle.SendFlagColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ETC_OutVehicleRow : global::System.Data.DataRow {
            
            private ETC_OutVehicleDataTable tableETC_OutVehicle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ETC_OutVehicleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableETC_OutVehicle = ((ETC_OutVehicleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyDate {
                get {
                    return ((global::System.DateTime)(this[this.tableETC_OutVehicle.DutyDateColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.DutyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OperatorNum {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.OperatorNumColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.OperatorNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StationID {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.StationIDColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.StationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RoadNum {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.RoadNumColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.RoadNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReachDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableETC_OutVehicle.ReachDateTimeColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.ReachDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short VehicleID {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.VehicleIDColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.VehicleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FreeType {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.FreeTypeColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.FreeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreeDes {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.FreeDesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“FreeDes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.FreeDesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SpecialType {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.SpecialTypeColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.SpecialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ImageIndex {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.ImageIndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“ImageIndex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.ImageIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CardType {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.CardTypeColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.CardTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardNum {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.CardNumColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.CardNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InStationID {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.InStationIDColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.InStationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InStationName {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.InStationNameColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.InStationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PassFee {
                get {
                    return ((decimal)(this[this.tableETC_OutVehicle.PassFeeColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.PassFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PrePayCash {
                get {
                    try {
                        return ((decimal)(this[this.tableETC_OutVehicle.PrePayCashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“PrePayCash”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.PrePayCashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RKCP {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.RKCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“RKCP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.RKCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CKCP {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.CKCPColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.CKCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BillNum {
                get {
                    return ((int)(this[this.tableETC_OutVehicle.BillNumColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.BillNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ErrorBillSymbol {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.ErrorBillSymbolColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.ErrorBillSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstationTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableETC_OutVehicle.InstationTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“InstationTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.InstationTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ChangedFee {
                get {
                    return ((decimal)(this[this.tableETC_OutVehicle.ChangedFeeColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.ChangedFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OperatorName {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.OperatorNameColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.OperatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StationName {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.StationNameColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.StationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SCID {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.SCIDColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.SCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SCNAME {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.SCNAMEColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.SCNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ZS {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.ZSColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.ZSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ZZS {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.ZZSColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.ZZSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZZX {
                get {
                    return ((decimal)(this[this.tableETC_OutVehicle.ZZXColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.ZZXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SFZZ {
                get {
                    return ((decimal)(this[this.tableETC_OutVehicle.SFZZColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.SFZZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZX {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.ZXColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.ZXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CXBL {
                get {
                    try {
                        return ((decimal)(this[this.tableETC_OutVehicle.CXBLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“CXBL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.CXBLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ChargeFlag {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.ChargeFlagColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.ChargeFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short IsUsed {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.IsUsedColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.IsUsedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PayCardBalance {
                get {
                    return ((decimal)(this[this.tableETC_OutVehicle.PayCardBalanceColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.PayCardBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ETCTradeNo {
                get {
                    try {
                        return ((int)(this[this.tableETC_OutVehicle.ETCTradeNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“ETCTradeNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.ETCTradeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ETCTac {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.ETCTacColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“ETCTac”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.ETCTacColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ETCTermTradNo {
                get {
                    try {
                        return ((int)(this[this.tableETC_OutVehicle.ETCTermTradNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“ETCTermTradNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.ETCTermTradNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ETCTermCode {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.ETCTermCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“ETCTermCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.ETCTermCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ETCFlag {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.ETCFlagColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.ETCFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CheckFlag {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.CheckFlagColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.CheckFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SendFlag {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.SendFlagColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.SendFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PayFlag {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.PayFlagColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.PayFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PayDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableETC_OutVehicle.PayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“PayDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.PayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EtcBillNum {
                get {
                    return ((int)(this[this.tableETC_OutVehicle.EtcBillNumColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.EtcBillNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short EtcBillYear {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.EtcBillYearColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.EtcBillYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Done {
                get {
                    return ((byte)(this[this.tableETC_OutVehicle.DoneColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.DoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string memo {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.memoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“memo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.memoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RebateType {
                get {
                    try {
                        return ((short)(this[this.tableETC_OutVehicle.RebateTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“RebateType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.RebateTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RebateFee {
                get {
                    try {
                        return ((decimal)(this[this.tableETC_OutVehicle.RebateFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“RebateFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.RebateFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string obunum {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.obunumColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.obunumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CaptureCP {
                get {
                    return ((string)(this[this.tableETC_OutVehicle.CaptureCPColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.CaptureCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte IsSync {
                get {
                    try {
                        return ((byte)(this[this.tableETC_OutVehicle.IsSyncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“IsSync”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.IsSyncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankID {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“BankID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankAccountNum {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.BankAccountNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“BankAccountNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.BankAccountNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerID {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“CustomerID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte RecordTruckFlag {
                get {
                    try {
                        return ((byte)(this[this.tableETC_OutVehicle.RecordTruckFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“RecordTruckFlag”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.RecordTruckFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte RecordVehicleID {
                get {
                    try {
                        return ((byte)(this[this.tableETC_OutVehicle.RecordVehicleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“RecordVehicleID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.RecordVehicleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DealTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableETC_OutVehicle.DealTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“DealTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.DealTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProvinceID {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.ProvinceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“ProvinceID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.ProvinceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BindCP {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.BindCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“BindCP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.BindCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RightPassfee {
                get {
                    try {
                        return ((decimal)(this[this.tableETC_OutVehicle.RightPassfeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“RightPassfee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.RightPassfeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TACFlag {
                get {
                    try {
                        return ((bool)(this[this.tableETC_OutVehicle.TACFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“TACFlag”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.TACFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PaySign {
                get {
                    return ((short)(this[this.tableETC_OutVehicle.PaySignColumn]));
                }
                set {
                    this[this.tableETC_OutVehicle.PaySignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetNo {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.NetNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“NetNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.NetNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardCP {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.CardCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“CardCP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.CardCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OBUID {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.OBUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“OBUID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.OBUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankRebateInfo {
                get {
                    try {
                        return ((string)(this[this.tableETC_OutVehicle.BankRebateInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“BankRebateInfo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.BankRebateInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxFee {
                get {
                    try {
                        return ((decimal)(this[this.tableETC_OutVehicle.TaxFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“TaxFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.TaxFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short InRoadNum {
                get {
                    try {
                        return ((short)(this[this.tableETC_OutVehicle.InRoadNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“InRoadNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.InRoadNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FeeVerNum {
                get {
                    try {
                        return ((short)(this[this.tableETC_OutVehicle.FeeVerNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ETC_OutVehicle”中列“FeeVerNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableETC_OutVehicle.FeeVerNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeDesNull() {
                return this.IsNull(this.tableETC_OutVehicle.FreeDesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeDesNull() {
                this[this.tableETC_OutVehicle.FreeDesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImageIndexNull() {
                return this.IsNull(this.tableETC_OutVehicle.ImageIndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImageIndexNull() {
                this[this.tableETC_OutVehicle.ImageIndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrePayCashNull() {
                return this.IsNull(this.tableETC_OutVehicle.PrePayCashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrePayCashNull() {
                this[this.tableETC_OutVehicle.PrePayCashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRKCPNull() {
                return this.IsNull(this.tableETC_OutVehicle.RKCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRKCPNull() {
                this[this.tableETC_OutVehicle.RKCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstationTimeNull() {
                return this.IsNull(this.tableETC_OutVehicle.InstationTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstationTimeNull() {
                this[this.tableETC_OutVehicle.InstationTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCXBLNull() {
                return this.IsNull(this.tableETC_OutVehicle.CXBLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCXBLNull() {
                this[this.tableETC_OutVehicle.CXBLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETCTradeNoNull() {
                return this.IsNull(this.tableETC_OutVehicle.ETCTradeNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETCTradeNoNull() {
                this[this.tableETC_OutVehicle.ETCTradeNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETCTacNull() {
                return this.IsNull(this.tableETC_OutVehicle.ETCTacColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETCTacNull() {
                this[this.tableETC_OutVehicle.ETCTacColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETCTermTradNoNull() {
                return this.IsNull(this.tableETC_OutVehicle.ETCTermTradNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETCTermTradNoNull() {
                this[this.tableETC_OutVehicle.ETCTermTradNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETCTermCodeNull() {
                return this.IsNull(this.tableETC_OutVehicle.ETCTermCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETCTermCodeNull() {
                this[this.tableETC_OutVehicle.ETCTermCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayDateNull() {
                return this.IsNull(this.tableETC_OutVehicle.PayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayDateNull() {
                this[this.tableETC_OutVehicle.PayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmemoNull() {
                return this.IsNull(this.tableETC_OutVehicle.memoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmemoNull() {
                this[this.tableETC_OutVehicle.memoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRebateTypeNull() {
                return this.IsNull(this.tableETC_OutVehicle.RebateTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRebateTypeNull() {
                this[this.tableETC_OutVehicle.RebateTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRebateFeeNull() {
                return this.IsNull(this.tableETC_OutVehicle.RebateFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRebateFeeNull() {
                this[this.tableETC_OutVehicle.RebateFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsSyncNull() {
                return this.IsNull(this.tableETC_OutVehicle.IsSyncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsSyncNull() {
                this[this.tableETC_OutVehicle.IsSyncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableETC_OutVehicle.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankIDNull() {
                this[this.tableETC_OutVehicle.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankAccountNumNull() {
                return this.IsNull(this.tableETC_OutVehicle.BankAccountNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankAccountNumNull() {
                this[this.tableETC_OutVehicle.BankAccountNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableETC_OutVehicle.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableETC_OutVehicle.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordTruckFlagNull() {
                return this.IsNull(this.tableETC_OutVehicle.RecordTruckFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordTruckFlagNull() {
                this[this.tableETC_OutVehicle.RecordTruckFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordVehicleIDNull() {
                return this.IsNull(this.tableETC_OutVehicle.RecordVehicleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordVehicleIDNull() {
                this[this.tableETC_OutVehicle.RecordVehicleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDealTimeNull() {
                return this.IsNull(this.tableETC_OutVehicle.DealTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDealTimeNull() {
                this[this.tableETC_OutVehicle.DealTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvinceIDNull() {
                return this.IsNull(this.tableETC_OutVehicle.ProvinceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvinceIDNull() {
                this[this.tableETC_OutVehicle.ProvinceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBindCPNull() {
                return this.IsNull(this.tableETC_OutVehicle.BindCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBindCPNull() {
                this[this.tableETC_OutVehicle.BindCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRightPassfeeNull() {
                return this.IsNull(this.tableETC_OutVehicle.RightPassfeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRightPassfeeNull() {
                this[this.tableETC_OutVehicle.RightPassfeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTACFlagNull() {
                return this.IsNull(this.tableETC_OutVehicle.TACFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTACFlagNull() {
                this[this.tableETC_OutVehicle.TACFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetNoNull() {
                return this.IsNull(this.tableETC_OutVehicle.NetNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetNoNull() {
                this[this.tableETC_OutVehicle.NetNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardCPNull() {
                return this.IsNull(this.tableETC_OutVehicle.CardCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardCPNull() {
                this[this.tableETC_OutVehicle.CardCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOBUIDNull() {
                return this.IsNull(this.tableETC_OutVehicle.OBUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOBUIDNull() {
                this[this.tableETC_OutVehicle.OBUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankRebateInfoNull() {
                return this.IsNull(this.tableETC_OutVehicle.BankRebateInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankRebateInfoNull() {
                this[this.tableETC_OutVehicle.BankRebateInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxFeeNull() {
                return this.IsNull(this.tableETC_OutVehicle.TaxFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxFeeNull() {
                this[this.tableETC_OutVehicle.TaxFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInRoadNumNull() {
                return this.IsNull(this.tableETC_OutVehicle.InRoadNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInRoadNumNull() {
                this[this.tableETC_OutVehicle.InRoadNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeeVerNumNull() {
                return this.IsNull(this.tableETC_OutVehicle.FeeVerNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeeVerNumNull() {
                this[this.tableETC_OutVehicle.FeeVerNumColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GA_DebitVehicleRowChangeEvent : global::System.EventArgs {
            
            private GA_DebitVehicleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GA_DebitVehicleRowChangeEvent(GA_DebitVehicleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GA_DebitVehicleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ETC_OutVehicleRowChangeEvent : global::System.EventArgs {
            
            private ETC_OutVehicleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ETC_OutVehicleRowChangeEvent(ETC_OutVehicleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ETC_OutVehicleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace RDLC.EtcCenter_testingDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GA_DebitVehicleTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GA_DebitVehicleTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GA_DebitVehicle";
            tableMapping.ColumnMappings.Add("CP", "CP");
            tableMapping.ColumnMappings.Add("StartTime", "StartTime");
            tableMapping.ColumnMappings.Add("EndTime", "EndTime");
            tableMapping.ColumnMappings.Add("OperateTime", "OperateTime");
            tableMapping.ColumnMappings.Add("DebitCardNum", "DebitCardNum");
            tableMapping.ColumnMappings.Add("DebitVersionNum", "DebitVersionNum");
            tableMapping.ColumnMappings.Add("VerifyCode", "VerifyCode");
            tableMapping.ColumnMappings.Add("OrgID", "OrgID");
            tableMapping.ColumnMappings.Add("OperatorNum", "OperatorNum");
            tableMapping.ColumnMappings.Add("CheckOperatorNum", "CheckOperatorNum");
            tableMapping.ColumnMappings.Add("RecordTime", "RecordTime");
            tableMapping.ColumnMappings.Add("CheckTime", "CheckTime");
            tableMapping.ColumnMappings.Add("IsCheck", "IsCheck");
            tableMapping.ColumnMappings.Add("Memo", "Memo");
            tableMapping.ColumnMappings.Add("SendFlag", "SendFlag");
            tableMapping.ColumnMappings.Add("DebitType", "DebitType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [nlieec].[GA_DebitVehicle] WHERE (([CP] = @Original_CP) AND ((@IsNull_StartTime = 1 AND [StartTime] IS NULL) OR ([StartTime] = @Original_StartTime)) AND ((@IsNull_EndTime = 1 AND [EndTime] IS NULL) OR ([EndTime] = @Original_EndTime)) AND ((@IsNull_OperateTime = 1 AND [OperateTime] IS NULL) OR ([OperateTime] = @Original_OperateTime)) AND ([DebitCardNum] = @Original_DebitCardNum) AND ((@IsNull_DebitVersionNum = 1 AND [DebitVersionNum] IS NULL) OR ([DebitVersionNum] = @Original_DebitVersionNum)) AND ((@IsNull_VerifyCode = 1 AND [VerifyCode] IS NULL) OR ([VerifyCode] = @Original_VerifyCode)) AND ((@IsNull_OrgID = 1 AND [OrgID] IS NULL) OR ([OrgID] = @Original_OrgID)) AND ((@IsNull_OperatorNum = 1 AND [OperatorNum] IS NULL) OR ([OperatorNum] = @Original_OperatorNum)) AND ((@IsNull_CheckOperatorNum = 1 AND [CheckOperatorNum] IS NULL) OR ([CheckOperatorNum] = @Original_CheckOperatorNum)) AND ((@IsNull_RecordTime = 1 AND [RecordTime] IS NULL) OR ([RecordTime] = @Original_RecordTime)) AND ((@IsNull_CheckTime = 1 AND [CheckTime] IS NULL) OR ([CheckTime] = @Original_CheckTime)) AND ((@IsNull_IsCheck = 1 AND [IsCheck] IS NULL) OR ([IsCheck] = @Original_IsCheck)) AND ((@IsNull_Memo = 1 AND [Memo] IS NULL) OR ([Memo] = @Original_Memo)) AND ((@IsNull_SendFlag = 1 AND [SendFlag] IS NULL) OR ([SendFlag] = @Original_SendFlag)) AND ([DebitType] = @Original_DebitType))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StartTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EndTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OperateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DebitCardNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitCardNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DebitVersionNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitVersionNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DebitVersionNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitVersionNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VerifyCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VerifyCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VerifyCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VerifyCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OrgID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrgID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrgID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrgID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OperatorNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CheckOperatorNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckOperatorNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CheckOperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckOperatorNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CheckTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CheckTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsCheck", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCheck", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsCheck", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCheck", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Memo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SendFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendFlag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DebitType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [nlieec].[GA_DebitVehicle] ([CP], [StartTime], [EndTime], [OperateTime], [DebitCardNum], [DebitVersionNum], [VerifyCode], [OrgID], [OperatorNum], [CheckOperatorNum], [RecordTime], [CheckTime], [IsCheck], [Memo], [SendFlag], [DebitType]) VALUES (@CP, @StartTime, @EndTime, @OperateTime, @DebitCardNum, @DebitVersionNum, @VerifyCode, @OrgID, @OperatorNum, @CheckOperatorNum, @RecordTime, @CheckTime, @IsCheck, @Memo, @SendFlag, @DebitType);
SELECT CP, StartTime, EndTime, OperateTime, DebitCardNum, DebitVersionNum, VerifyCode, OrgID, OperatorNum, CheckOperatorNum, RecordTime, CheckTime, IsCheck, Memo, SendFlag, DebitType FROM nlieec.GA_DebitVehicle WHERE (CP = @CP) AND (DebitCardNum = @DebitCardNum) AND (DebitType = @DebitType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DebitCardNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitCardNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DebitVersionNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitVersionNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VerifyCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VerifyCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrgID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrgID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckOperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckOperatorNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCheck", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCheck", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendFlag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DebitType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [nlieec].[GA_DebitVehicle] SET [CP] = @CP, [StartTime] = @StartTime, [EndT" +
                "ime] = @EndTime, [OperateTime] = @OperateTime, [DebitCardNum] = @DebitCardNum, [" +
                "DebitVersionNum] = @DebitVersionNum, [VerifyCode] = @VerifyCode, [OrgID] = @OrgI" +
                "D, [OperatorNum] = @OperatorNum, [CheckOperatorNum] = @CheckOperatorNum, [Record" +
                "Time] = @RecordTime, [CheckTime] = @CheckTime, [IsCheck] = @IsCheck, [Memo] = @M" +
                "emo, [SendFlag] = @SendFlag, [DebitType] = @DebitType WHERE (([CP] = @Original_C" +
                "P) AND ((@IsNull_StartTime = 1 AND [StartTime] IS NULL) OR ([StartTime] = @Origi" +
                "nal_StartTime)) AND ((@IsNull_EndTime = 1 AND [EndTime] IS NULL) OR ([EndTime] =" +
                " @Original_EndTime)) AND ((@IsNull_OperateTime = 1 AND [OperateTime] IS NULL) OR" +
                " ([OperateTime] = @Original_OperateTime)) AND ([DebitCardNum] = @Original_DebitC" +
                "ardNum) AND ((@IsNull_DebitVersionNum = 1 AND [DebitVersionNum] IS NULL) OR ([De" +
                "bitVersionNum] = @Original_DebitVersionNum)) AND ((@IsNull_VerifyCode = 1 AND [V" +
                "erifyCode] IS NULL) OR ([VerifyCode] = @Original_VerifyCode)) AND ((@IsNull_OrgI" +
                "D = 1 AND [OrgID] IS NULL) OR ([OrgID] = @Original_OrgID)) AND ((@IsNull_Operato" +
                "rNum = 1 AND [OperatorNum] IS NULL) OR ([OperatorNum] = @Original_OperatorNum)) " +
                "AND ((@IsNull_CheckOperatorNum = 1 AND [CheckOperatorNum] IS NULL) OR ([CheckOpe" +
                "ratorNum] = @Original_CheckOperatorNum)) AND ((@IsNull_RecordTime = 1 AND [Recor" +
                "dTime] IS NULL) OR ([RecordTime] = @Original_RecordTime)) AND ((@IsNull_CheckTim" +
                "e = 1 AND [CheckTime] IS NULL) OR ([CheckTime] = @Original_CheckTime)) AND ((@Is" +
                "Null_IsCheck = 1 AND [IsCheck] IS NULL) OR ([IsCheck] = @Original_IsCheck)) AND " +
                "((@IsNull_Memo = 1 AND [Memo] IS NULL) OR ([Memo] = @Original_Memo)) AND ((@IsNu" +
                "ll_SendFlag = 1 AND [SendFlag] IS NULL) OR ([SendFlag] = @Original_SendFlag)) AN" +
                "D ([DebitType] = @Original_DebitType));\r\nSELECT CP, StartTime, EndTime, OperateT" +
                "ime, DebitCardNum, DebitVersionNum, VerifyCode, OrgID, OperatorNum, CheckOperato" +
                "rNum, RecordTime, CheckTime, IsCheck, Memo, SendFlag, DebitType FROM nlieec.GA_D" +
                "ebitVehicle WHERE (CP = @CP) AND (DebitCardNum = @DebitCardNum) AND (DebitType =" +
                " @DebitType)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DebitCardNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitCardNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DebitVersionNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitVersionNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VerifyCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VerifyCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrgID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrgID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckOperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckOperatorNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCheck", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCheck", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendFlag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DebitType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StartTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EndTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OperateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DebitCardNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitCardNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DebitVersionNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitVersionNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DebitVersionNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitVersionNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VerifyCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VerifyCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VerifyCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VerifyCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OrgID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrgID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrgID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrgID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OperatorNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CheckOperatorNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckOperatorNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CheckOperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckOperatorNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CheckTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CheckTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsCheck", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCheck", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsCheck", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCheck", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Memo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SendFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendFlag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DebitType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DebitType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::RDLC.Properties.Settings.Default.EtcCenter_testingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CP, StartTime, EndTime, OperateTime, DebitCardNum, DebitVersionNum, Verify" +
                "Code, OrgID, OperatorNum, CheckOperatorNum, RecordTime, CheckTime, IsCheck, Memo" +
                ", SendFlag, DebitType FROM nlieec.GA_DebitVehicle";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EtcCenter_testingDataSet.GA_DebitVehicleDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EtcCenter_testingDataSet.GA_DebitVehicleDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EtcCenter_testingDataSet.GA_DebitVehicleDataTable dataTable = new EtcCenter_testingDataSet.GA_DebitVehicleDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EtcCenter_testingDataSet.GA_DebitVehicleDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EtcCenter_testingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "GA_DebitVehicle");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_CP, 
                    global::System.Nullable<global::System.DateTime> Original_StartTime, 
                    global::System.Nullable<global::System.DateTime> Original_EndTime, 
                    global::System.Nullable<global::System.DateTime> Original_OperateTime, 
                    string Original_DebitCardNum, 
                    global::System.Nullable<int> Original_DebitVersionNum, 
                    global::System.Nullable<int> Original_VerifyCode, 
                    string Original_OrgID, 
                    string Original_OperatorNum, 
                    string Original_CheckOperatorNum, 
                    global::System.Nullable<global::System.DateTime> Original_RecordTime, 
                    global::System.Nullable<global::System.DateTime> Original_CheckTime, 
                    global::System.Nullable<byte> Original_IsCheck, 
                    string Original_Memo, 
                    global::System.Nullable<byte> Original_SendFlag, 
                    int Original_DebitType) {
            if ((Original_CP == null)) {
                throw new global::System.ArgumentNullException("Original_CP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CP));
            }
            if ((Original_StartTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_StartTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_EndTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_EndTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_OperateTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_OperateTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_DebitCardNum == null)) {
                throw new global::System.ArgumentNullException("Original_DebitCardNum");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DebitCardNum));
            }
            if ((Original_DebitVersionNum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_DebitVersionNum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_VerifyCode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_VerifyCode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_OrgID == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_OrgID));
            }
            if ((Original_OperatorNum == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_OperatorNum));
            }
            if ((Original_CheckOperatorNum == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_CheckOperatorNum));
            }
            if ((Original_RecordTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_RecordTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_CheckTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_CheckTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_IsCheck.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((byte)(Original_IsCheck.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Memo == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_Memo));
            }
            if ((Original_SendFlag.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((byte)(Original_SendFlag.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_DebitType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CP, 
                    global::System.Nullable<global::System.DateTime> StartTime, 
                    global::System.Nullable<global::System.DateTime> EndTime, 
                    global::System.Nullable<global::System.DateTime> OperateTime, 
                    string DebitCardNum, 
                    global::System.Nullable<int> DebitVersionNum, 
                    global::System.Nullable<int> VerifyCode, 
                    string OrgID, 
                    string OperatorNum, 
                    string CheckOperatorNum, 
                    global::System.Nullable<global::System.DateTime> RecordTime, 
                    global::System.Nullable<global::System.DateTime> CheckTime, 
                    global::System.Nullable<byte> IsCheck, 
                    string Memo, 
                    global::System.Nullable<byte> SendFlag, 
                    int DebitType) {
            if ((CP == null)) {
                throw new global::System.ArgumentNullException("CP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CP));
            }
            if ((StartTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(StartTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EndTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(EndTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OperateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(OperateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DebitCardNum == null)) {
                throw new global::System.ArgumentNullException("DebitCardNum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DebitCardNum));
            }
            if ((DebitVersionNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(DebitVersionNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((VerifyCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(VerifyCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((OrgID == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(OrgID));
            }
            if ((OperatorNum == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(OperatorNum));
            }
            if ((CheckOperatorNum == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CheckOperatorNum));
            }
            if ((RecordTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(RecordTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CheckTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(CheckTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((IsCheck.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((byte)(IsCheck.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Memo == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Memo));
            }
            if ((SendFlag.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((byte)(SendFlag.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(DebitType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CP, 
                    global::System.Nullable<global::System.DateTime> StartTime, 
                    global::System.Nullable<global::System.DateTime> EndTime, 
                    global::System.Nullable<global::System.DateTime> OperateTime, 
                    string DebitCardNum, 
                    global::System.Nullable<int> DebitVersionNum, 
                    global::System.Nullable<int> VerifyCode, 
                    string OrgID, 
                    string OperatorNum, 
                    string CheckOperatorNum, 
                    global::System.Nullable<global::System.DateTime> RecordTime, 
                    global::System.Nullable<global::System.DateTime> CheckTime, 
                    global::System.Nullable<byte> IsCheck, 
                    string Memo, 
                    global::System.Nullable<byte> SendFlag, 
                    int DebitType, 
                    string Original_CP, 
                    global::System.Nullable<global::System.DateTime> Original_StartTime, 
                    global::System.Nullable<global::System.DateTime> Original_EndTime, 
                    global::System.Nullable<global::System.DateTime> Original_OperateTime, 
                    string Original_DebitCardNum, 
                    global::System.Nullable<int> Original_DebitVersionNum, 
                    global::System.Nullable<int> Original_VerifyCode, 
                    string Original_OrgID, 
                    string Original_OperatorNum, 
                    string Original_CheckOperatorNum, 
                    global::System.Nullable<global::System.DateTime> Original_RecordTime, 
                    global::System.Nullable<global::System.DateTime> Original_CheckTime, 
                    global::System.Nullable<byte> Original_IsCheck, 
                    string Original_Memo, 
                    global::System.Nullable<byte> Original_SendFlag, 
                    int Original_DebitType) {
            if ((CP == null)) {
                throw new global::System.ArgumentNullException("CP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CP));
            }
            if ((StartTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(StartTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EndTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(EndTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OperateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(OperateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DebitCardNum == null)) {
                throw new global::System.ArgumentNullException("DebitCardNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DebitCardNum));
            }
            if ((DebitVersionNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(DebitVersionNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((VerifyCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(VerifyCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((OrgID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(OrgID));
            }
            if ((OperatorNum == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(OperatorNum));
            }
            if ((CheckOperatorNum == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CheckOperatorNum));
            }
            if ((RecordTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(RecordTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CheckTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(CheckTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((IsCheck.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(IsCheck.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Memo == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Memo));
            }
            if ((SendFlag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((byte)(SendFlag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(DebitType));
            if ((Original_CP == null)) {
                throw new global::System.ArgumentNullException("Original_CP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_CP));
            }
            if ((Original_StartTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_StartTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_EndTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_EndTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_OperateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_OperateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_DebitCardNum == null)) {
                throw new global::System.ArgumentNullException("Original_DebitCardNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_DebitCardNum));
            }
            if ((Original_DebitVersionNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_DebitVersionNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_VerifyCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_VerifyCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_OrgID == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_OrgID));
            }
            if ((Original_OperatorNum == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_OperatorNum));
            }
            if ((Original_CheckOperatorNum == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_CheckOperatorNum));
            }
            if ((Original_RecordTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_RecordTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_CheckTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_CheckTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_IsCheck.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((byte)(Original_IsCheck.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_Memo == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Memo));
            }
            if ((Original_SendFlag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((byte)(Original_SendFlag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_DebitType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> StartTime, 
                    global::System.Nullable<global::System.DateTime> EndTime, 
                    global::System.Nullable<global::System.DateTime> OperateTime, 
                    global::System.Nullable<int> DebitVersionNum, 
                    global::System.Nullable<int> VerifyCode, 
                    string OrgID, 
                    string OperatorNum, 
                    string CheckOperatorNum, 
                    global::System.Nullable<global::System.DateTime> RecordTime, 
                    global::System.Nullable<global::System.DateTime> CheckTime, 
                    global::System.Nullable<byte> IsCheck, 
                    string Memo, 
                    global::System.Nullable<byte> SendFlag, 
                    string Original_CP, 
                    global::System.Nullable<global::System.DateTime> Original_StartTime, 
                    global::System.Nullable<global::System.DateTime> Original_EndTime, 
                    global::System.Nullable<global::System.DateTime> Original_OperateTime, 
                    string Original_DebitCardNum, 
                    global::System.Nullable<int> Original_DebitVersionNum, 
                    global::System.Nullable<int> Original_VerifyCode, 
                    string Original_OrgID, 
                    string Original_OperatorNum, 
                    string Original_CheckOperatorNum, 
                    global::System.Nullable<global::System.DateTime> Original_RecordTime, 
                    global::System.Nullable<global::System.DateTime> Original_CheckTime, 
                    global::System.Nullable<byte> Original_IsCheck, 
                    string Original_Memo, 
                    global::System.Nullable<byte> Original_SendFlag, 
                    int Original_DebitType) {
            return this.Update(Original_CP, StartTime, EndTime, OperateTime, Original_DebitCardNum, DebitVersionNum, VerifyCode, OrgID, OperatorNum, CheckOperatorNum, RecordTime, CheckTime, IsCheck, Memo, SendFlag, Original_DebitType, Original_CP, Original_StartTime, Original_EndTime, Original_OperateTime, Original_DebitCardNum, Original_DebitVersionNum, Original_VerifyCode, Original_OrgID, Original_OperatorNum, Original_CheckOperatorNum, Original_RecordTime, Original_CheckTime, Original_IsCheck, Original_Memo, Original_SendFlag, Original_DebitType);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ETC_OutVehicleTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ETC_OutVehicleTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ETC_OutVehicle";
            tableMapping.ColumnMappings.Add("DutyDate", "DutyDate");
            tableMapping.ColumnMappings.Add("OperatorNum", "OperatorNum");
            tableMapping.ColumnMappings.Add("StationID", "StationID");
            tableMapping.ColumnMappings.Add("RoadNum", "RoadNum");
            tableMapping.ColumnMappings.Add("ReachDateTime", "ReachDateTime");
            tableMapping.ColumnMappings.Add("VehicleID", "VehicleID");
            tableMapping.ColumnMappings.Add("FreeType", "FreeType");
            tableMapping.ColumnMappings.Add("FreeDes", "FreeDes");
            tableMapping.ColumnMappings.Add("SpecialType", "SpecialType");
            tableMapping.ColumnMappings.Add("ImageIndex", "ImageIndex");
            tableMapping.ColumnMappings.Add("CardType", "CardType");
            tableMapping.ColumnMappings.Add("CardNum", "CardNum");
            tableMapping.ColumnMappings.Add("InStationID", "InStationID");
            tableMapping.ColumnMappings.Add("InStationName", "InStationName");
            tableMapping.ColumnMappings.Add("PassFee", "PassFee");
            tableMapping.ColumnMappings.Add("PrePayCash", "PrePayCash");
            tableMapping.ColumnMappings.Add("RKCP", "RKCP");
            tableMapping.ColumnMappings.Add("CKCP", "CKCP");
            tableMapping.ColumnMappings.Add("BillNum", "BillNum");
            tableMapping.ColumnMappings.Add("ErrorBillSymbol", "ErrorBillSymbol");
            tableMapping.ColumnMappings.Add("InstationTime", "InstationTime");
            tableMapping.ColumnMappings.Add("ChangedFee", "ChangedFee");
            tableMapping.ColumnMappings.Add("OperatorName", "OperatorName");
            tableMapping.ColumnMappings.Add("StationName", "StationName");
            tableMapping.ColumnMappings.Add("SCID", "SCID");
            tableMapping.ColumnMappings.Add("SCNAME", "SCNAME");
            tableMapping.ColumnMappings.Add("ZS", "ZS");
            tableMapping.ColumnMappings.Add("ZZS", "ZZS");
            tableMapping.ColumnMappings.Add("ZZX", "ZZX");
            tableMapping.ColumnMappings.Add("SFZZ", "SFZZ");
            tableMapping.ColumnMappings.Add("ZX", "ZX");
            tableMapping.ColumnMappings.Add("CXBL", "CXBL");
            tableMapping.ColumnMappings.Add("ChargeFlag", "ChargeFlag");
            tableMapping.ColumnMappings.Add("IsUsed", "IsUsed");
            tableMapping.ColumnMappings.Add("PayCardBalance", "PayCardBalance");
            tableMapping.ColumnMappings.Add("ETCTradeNo", "ETCTradeNo");
            tableMapping.ColumnMappings.Add("ETCTac", "ETCTac");
            tableMapping.ColumnMappings.Add("ETCTermTradNo", "ETCTermTradNo");
            tableMapping.ColumnMappings.Add("ETCTermCode", "ETCTermCode");
            tableMapping.ColumnMappings.Add("ETCFlag", "ETCFlag");
            tableMapping.ColumnMappings.Add("CheckFlag", "CheckFlag");
            tableMapping.ColumnMappings.Add("SendFlag", "SendFlag");
            tableMapping.ColumnMappings.Add("PayFlag", "PayFlag");
            tableMapping.ColumnMappings.Add("PayDate", "PayDate");
            tableMapping.ColumnMappings.Add("EtcBillNum", "EtcBillNum");
            tableMapping.ColumnMappings.Add("EtcBillYear", "EtcBillYear");
            tableMapping.ColumnMappings.Add("Done", "Done");
            tableMapping.ColumnMappings.Add("memo", "memo");
            tableMapping.ColumnMappings.Add("RebateType", "RebateType");
            tableMapping.ColumnMappings.Add("RebateFee", "RebateFee");
            tableMapping.ColumnMappings.Add("obunum", "obunum");
            tableMapping.ColumnMappings.Add("CaptureCP", "CaptureCP");
            tableMapping.ColumnMappings.Add("IsSync", "IsSync");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("BankAccountNum", "BankAccountNum");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("RecordTruckFlag", "RecordTruckFlag");
            tableMapping.ColumnMappings.Add("RecordVehicleID", "RecordVehicleID");
            tableMapping.ColumnMappings.Add("DealTime", "DealTime");
            tableMapping.ColumnMappings.Add("ProvinceID", "ProvinceID");
            tableMapping.ColumnMappings.Add("BindCP", "BindCP");
            tableMapping.ColumnMappings.Add("RightPassfee", "RightPassfee");
            tableMapping.ColumnMappings.Add("TACFlag", "TACFlag");
            tableMapping.ColumnMappings.Add("PaySign", "PaySign");
            tableMapping.ColumnMappings.Add("NetNo", "NetNo");
            tableMapping.ColumnMappings.Add("CardCP", "CardCP");
            tableMapping.ColumnMappings.Add("OBUID", "OBUID");
            tableMapping.ColumnMappings.Add("BankRebateInfo", "BankRebateInfo");
            tableMapping.ColumnMappings.Add("TaxFee", "TaxFee");
            tableMapping.ColumnMappings.Add("InRoadNum", "InRoadNum");
            tableMapping.ColumnMappings.Add("FeeVerNum", "FeeVerNum");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [nlieec].[ETC_OutVehicle] WHERE (([DutyDate] = @Original_DutyDate) AN" +
                "D ([OperatorNum] = @Original_OperatorNum) AND ([StationID] = @Original_StationID" +
                ") AND ([RoadNum] = @Original_RoadNum) AND ([ReachDateTime] = @Original_ReachDate" +
                "Time) AND ([VehicleID] = @Original_VehicleID) AND ([FreeType] = @Original_FreeTy" +
                "pe) AND ((@IsNull_FreeDes = 1 AND [FreeDes] IS NULL) OR ([FreeDes] = @Original_F" +
                "reeDes)) AND ([SpecialType] = @Original_SpecialType) AND ((@IsNull_ImageIndex = " +
                "1 AND [ImageIndex] IS NULL) OR ([ImageIndex] = @Original_ImageIndex)) AND ([Card" +
                "Type] = @Original_CardType) AND ([CardNum] = @Original_CardNum) AND ([InStationI" +
                "D] = @Original_InStationID) AND ([InStationName] = @Original_InStationName) AND " +
                "([PassFee] = @Original_PassFee) AND ((@IsNull_PrePayCash = 1 AND [PrePayCash] IS" +
                " NULL) OR ([PrePayCash] = @Original_PrePayCash)) AND ((@IsNull_RKCP = 1 AND [RKC" +
                "P] IS NULL) OR ([RKCP] = @Original_RKCP)) AND ([CKCP] = @Original_CKCP) AND ([Bi" +
                "llNum] = @Original_BillNum) AND ([ErrorBillSymbol] = @Original_ErrorBillSymbol) " +
                "AND ((@IsNull_InstationTime = 1 AND [InstationTime] IS NULL) OR ([InstationTime]" +
                " = @Original_InstationTime)) AND ([ChangedFee] = @Original_ChangedFee) AND ([Ope" +
                "ratorName] = @Original_OperatorName) AND ([StationName] = @Original_StationName)" +
                " AND ([SCID] = @Original_SCID) AND ([SCNAME] = @Original_SCNAME) AND ([ZS] = @Or" +
                "iginal_ZS) AND ([ZZS] = @Original_ZZS) AND ([ZZX] = @Original_ZZX) AND ([SFZZ] =" +
                " @Original_SFZZ) AND ([ZX] = @Original_ZX) AND ((@IsNull_CXBL = 1 AND [CXBL] IS " +
                "NULL) OR ([CXBL] = @Original_CXBL)) AND ([ChargeFlag] = @Original_ChargeFlag) AN" +
                "D ([IsUsed] = @Original_IsUsed) AND ([PayCardBalance] = @Original_PayCardBalance" +
                ") AND ((@IsNull_ETCTradeNo = 1 AND [ETCTradeNo] IS NULL) OR ([ETCTradeNo] = @Ori" +
                "ginal_ETCTradeNo)) AND ((@IsNull_ETCTac = 1 AND [ETCTac] IS NULL) OR ([ETCTac] =" +
                " @Original_ETCTac)) AND ((@IsNull_ETCTermTradNo = 1 AND [ETCTermTradNo] IS NULL)" +
                " OR ([ETCTermTradNo] = @Original_ETCTermTradNo)) AND ((@IsNull_ETCTermCode = 1 A" +
                "ND [ETCTermCode] IS NULL) OR ([ETCTermCode] = @Original_ETCTermCode)) AND ([ETCF" +
                "lag] = @Original_ETCFlag) AND ([CheckFlag] = @Original_CheckFlag) AND ([SendFlag" +
                "] = @Original_SendFlag) AND ([PayFlag] = @Original_PayFlag) AND ((@IsNull_PayDat" +
                "e = 1 AND [PayDate] IS NULL) OR ([PayDate] = @Original_PayDate)) AND ([EtcBillNu" +
                "m] = @Original_EtcBillNum) AND ([EtcBillYear] = @Original_EtcBillYear) AND ([Don" +
                "e] = @Original_Done) AND ((@IsNull_memo = 1 AND [memo] IS NULL) OR ([memo] = @Or" +
                "iginal_memo)) AND ((@IsNull_RebateType = 1 AND [RebateType] IS NULL) OR ([Rebate" +
                "Type] = @Original_RebateType)) AND ((@IsNull_RebateFee = 1 AND [RebateFee] IS NU" +
                "LL) OR ([RebateFee] = @Original_RebateFee)) AND ([obunum] = @Original_obunum) AN" +
                "D ([CaptureCP] = @Original_CaptureCP) AND ((@IsNull_IsSync = 1 AND [IsSync] IS N" +
                "ULL) OR ([IsSync] = @Original_IsSync)) AND ((@IsNull_BankID = 1 AND [BankID] IS " +
                "NULL) OR ([BankID] = @Original_BankID)) AND ((@IsNull_BankAccountNum = 1 AND [Ba" +
                "nkAccountNum] IS NULL) OR ([BankAccountNum] = @Original_BankAccountNum)) AND ((@" +
                "IsNull_CustomerID = 1 AND [CustomerID] IS NULL) OR ([CustomerID] = @Original_Cus" +
                "tomerID)) AND ((@IsNull_RecordTruckFlag = 1 AND [RecordTruckFlag] IS NULL) OR ([" +
                "RecordTruckFlag] = @Original_RecordTruckFlag)) AND ((@IsNull_RecordVehicleID = 1" +
                " AND [RecordVehicleID] IS NULL) OR ([RecordVehicleID] = @Original_RecordVehicleI" +
                "D)) AND ((@IsNull_DealTime = 1 AND [DealTime] IS NULL) OR ([DealTime] = @Origina" +
                "l_DealTime)) AND ((@IsNull_ProvinceID = 1 AND [ProvinceID] IS NULL) OR ([Provinc" +
                "eID] = @Original_ProvinceID)) AND ((@IsNull_BindCP = 1 AND [BindCP] IS NULL) OR " +
                "([BindCP] = @Original_BindCP)) AND ((@IsNull_RightPassfee = 1 AND [RightPassfee]" +
                " IS NULL) OR ([RightPassfee] = @Original_RightPassfee)) AND ((@IsNull_TACFlag = " +
                "1 AND [TACFlag] IS NULL) OR ([TACFlag] = @Original_TACFlag)) AND ([PaySign] = @O" +
                "riginal_PaySign) AND ((@IsNull_NetNo = 1 AND [NetNo] IS NULL) OR ([NetNo] = @Ori" +
                "ginal_NetNo)) AND ((@IsNull_CardCP = 1 AND [CardCP] IS NULL) OR ([CardCP] = @Ori" +
                "ginal_CardCP)) AND ((@IsNull_OBUID = 1 AND [OBUID] IS NULL) OR ([OBUID] = @Origi" +
                "nal_OBUID)) AND ((@IsNull_BankRebateInfo = 1 AND [BankRebateInfo] IS NULL) OR ([" +
                "BankRebateInfo] = @Original_BankRebateInfo)) AND ((@IsNull_TaxFee = 1 AND [TaxFe" +
                "e] IS NULL) OR ([TaxFee] = @Original_TaxFee)) AND ((@IsNull_InRoadNum = 1 AND [I" +
                "nRoadNum] IS NULL) OR ([InRoadNum] = @Original_InRoadNum)) AND ((@IsNull_FeeVerN" +
                "um = 1 AND [FeeVerNum] IS NULL) OR ([FeeVerNum] = @Original_FeeVerNum)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DutyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DutyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StationID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoadNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoadNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReachDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReachDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreeType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FreeDes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeDes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreeDes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeDes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageIndex", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageIndex", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageIndex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageIndex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InStationID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InStationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InStationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InStationName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PassFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrePayCash", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrePayCash", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrePayCash", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrePayCash", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RKCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RKCP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RKCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RKCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CKCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CKCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ErrorBillSymbol", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ErrorBillSymbol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InstationTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstationTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InstationTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstationTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangedFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangedFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperatorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StationName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZS", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZZS", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZZS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZZX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 2, "ZZX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SFZZ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 2, "SFZZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CXBL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXBL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXBL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 4, "CXBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChargeFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargeFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsUsed", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUsed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayCardBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayCardBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ETCTradeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTradeNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETCTradeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTradeNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ETCTac", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTac", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETCTac", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTac", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ETCTermTradNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermTradNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETCTermTradNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermTradNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ETCTermCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETCTermCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETCFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CheckFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PayDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EtcBillNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtcBillNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EtcBillYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtcBillYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Done", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Done", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_memo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "memo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "memo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RebateType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RebateType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RebateType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RebateType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RebateFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RebateFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RebateFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 4, "RebateFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_obunum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "obunum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CaptureCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CaptureCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsSync", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSync", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsSync", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSync", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankAccountNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankAccountNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordTruckFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTruckFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTruckFlag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTruckFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordVehicleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordVehicleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordVehicleID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordVehicleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DealTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DealTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DealTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DealTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProvinceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProvinceID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProvinceID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProvinceID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BindCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BindCP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BindCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BindCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RightPassfee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RightPassfee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RightPassfee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RightPassfee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TACFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TACFlag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaySign", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaySign", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NetNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardCP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OBUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OBUID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OBUID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OBUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankRebateInfo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankRebateInfo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankRebateInfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankRebateInfo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TaxFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TaxFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InRoadNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InRoadNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InRoadNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InRoadNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FeeVerNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeeVerNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FeeVerNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeeVerNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [nlieec].[ETC_OutVehicle] ([DutyDate], [OperatorNum], [StationID], [R" +
                "oadNum], [ReachDateTime], [VehicleID], [FreeType], [FreeDes], [SpecialType], [Im" +
                "ageIndex], [CardType], [CardNum], [InStationID], [InStationName], [PassFee], [Pr" +
                "ePayCash], [RKCP], [CKCP], [BillNum], [ErrorBillSymbol], [InstationTime], [Chang" +
                "edFee], [OperatorName], [StationName], [SCID], [SCNAME], [ZS], [ZZS], [ZZX], [SF" +
                "ZZ], [ZX], [CXBL], [ChargeFlag], [IsUsed], [PayCardBalance], [ETCTradeNo], [ETCT" +
                "ac], [ETCTermTradNo], [ETCTermCode], [ETCFlag], [CheckFlag], [SendFlag], [PayFla" +
                "g], [PayDate], [EtcBillNum], [EtcBillYear], [Done], [memo], [RebateType], [Rebat" +
                "eFee], [obunum], [CaptureCP], [IsSync], [BankID], [BankAccountNum], [CustomerID]" +
                ", [RecordTruckFlag], [RecordVehicleID], [DealTime], [ProvinceID], [BindCP], [Rig" +
                "htPassfee], [TACFlag], [PaySign], [NetNo], [CardCP], [OBUID], [BankRebateInfo], " +
                "[TaxFee], [InRoadNum], [FeeVerNum]) VALUES (@DutyDate, @OperatorNum, @StationID," +
                " @RoadNum, @ReachDateTime, @VehicleID, @FreeType, @FreeDes, @SpecialType, @Image" +
                "Index, @CardType, @CardNum, @InStationID, @InStationName, @PassFee, @PrePayCash," +
                " @RKCP, @CKCP, @BillNum, @ErrorBillSymbol, @InstationTime, @ChangedFee, @Operato" +
                "rName, @StationName, @SCID, @SCNAME, @ZS, @ZZS, @ZZX, @SFZZ, @ZX, @CXBL, @Charge" +
                "Flag, @IsUsed, @PayCardBalance, @ETCTradeNo, @ETCTac, @ETCTermTradNo, @ETCTermCo" +
                "de, @ETCFlag, @CheckFlag, @SendFlag, @PayFlag, @PayDate, @EtcBillNum, @EtcBillYe" +
                "ar, @Done, @memo, @RebateType, @RebateFee, @obunum, @CaptureCP, @IsSync, @BankID" +
                ", @BankAccountNum, @CustomerID, @RecordTruckFlag, @RecordVehicleID, @DealTime, @" +
                "ProvinceID, @BindCP, @RightPassfee, @TACFlag, @PaySign, @NetNo, @CardCP, @OBUID," +
                " @BankRebateInfo, @TaxFee, @InRoadNum, @FeeVerNum);\r\nSELECT DutyDate, OperatorNu" +
                "m, StationID, RoadNum, ReachDateTime, VehicleID, FreeType, FreeDes, SpecialType," +
                " ImageIndex, CardType, CardNum, InStationID, InStationName, PassFee, PrePayCash," +
                " RKCP, CKCP, BillNum, ErrorBillSymbol, InstationTime, ChangedFee, OperatorName, " +
                "StationName, SCID, SCNAME, ZS, ZZS, ZZX, SFZZ, ZX, CXBL, ChargeFlag, IsUsed, Pay" +
                "CardBalance, ETCTradeNo, ETCTac, ETCTermTradNo, ETCTermCode, ETCFlag, CheckFlag," +
                " SendFlag, PayFlag, PayDate, EtcBillNum, EtcBillYear, Done, memo, RebateType, Re" +
                "bateFee, obunum, CaptureCP, IsSync, BankID, BankAccountNum, CustomerID, RecordTr" +
                "uckFlag, RecordVehicleID, DealTime, ProvinceID, BindCP, RightPassfee, TACFlag, P" +
                "aySign, NetNo, CardCP, OBUID, BankRebateInfo, TaxFee, InRoadNum, FeeVerNum FROM " +
                "nlieec.ETC_OutVehicle WHERE (BillNum = @BillNum) AND (CardNum = @CardNum) AND (E" +
                "TCFlag = @ETCFlag) AND (IsUsed = @IsUsed) AND (ReachDateTime = @ReachDateTime) A" +
                "ND (RoadNum = @RoadNum) AND (StationID = @StationID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DutyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DutyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StationID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoadNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoadNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReachDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReachDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreeType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreeDes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeDes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImageIndex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageIndex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InStationID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InStationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InStationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InStationName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PassFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrePayCash", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrePayCash", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RKCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RKCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CKCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CKCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ErrorBillSymbol", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ErrorBillSymbol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InstationTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstationTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangedFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangedFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperatorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StationName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZS", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZZS", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZZS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZZX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 2, "ZZX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SFZZ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 2, "SFZZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXBL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 4, "CXBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChargeFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargeFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsUsed", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUsed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayCardBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayCardBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETCTradeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTradeNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETCTac", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETCTermTradNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermTradNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETCTermCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETCFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EtcBillNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtcBillNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EtcBillYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtcBillYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Done", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Done", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RebateType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RebateType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RebateFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 4, "RebateFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@obunum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "obunum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CaptureCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CaptureCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSync", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSync", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccountNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTruckFlag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTruckFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordVehicleID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordVehicleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DealTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DealTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProvinceID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProvinceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BindCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BindCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RightPassfee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RightPassfee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TACFlag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaySign", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaySign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OBUID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OBUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankRebateInfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankRebateInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaxFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InRoadNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InRoadNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeeVerNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeeVerNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [nlieec].[ETC_OutVehicle] SET [DutyDate] = @DutyDate, [OperatorNum] = @Ope" +
                "ratorNum, [StationID] = @StationID, [RoadNum] = @RoadNum, [ReachDateTime] = @Rea" +
                "chDateTime, [VehicleID] = @VehicleID, [FreeType] = @FreeType, [FreeDes] = @FreeD" +
                "es, [SpecialType] = @SpecialType, [ImageIndex] = @ImageIndex, [CardType] = @Card" +
                "Type, [CardNum] = @CardNum, [InStationID] = @InStationID, [InStationName] = @InS" +
                "tationName, [PassFee] = @PassFee, [PrePayCash] = @PrePayCash, [RKCP] = @RKCP, [C" +
                "KCP] = @CKCP, [BillNum] = @BillNum, [ErrorBillSymbol] = @ErrorBillSymbol, [Insta" +
                "tionTime] = @InstationTime, [ChangedFee] = @ChangedFee, [OperatorName] = @Operat" +
                "orName, [StationName] = @StationName, [SCID] = @SCID, [SCNAME] = @SCNAME, [ZS] =" +
                " @ZS, [ZZS] = @ZZS, [ZZX] = @ZZX, [SFZZ] = @SFZZ, [ZX] = @ZX, [CXBL] = @CXBL, [C" +
                "hargeFlag] = @ChargeFlag, [IsUsed] = @IsUsed, [PayCardBalance] = @PayCardBalance" +
                ", [ETCTradeNo] = @ETCTradeNo, [ETCTac] = @ETCTac, [ETCTermTradNo] = @ETCTermTrad" +
                "No, [ETCTermCode] = @ETCTermCode, [ETCFlag] = @ETCFlag, [CheckFlag] = @CheckFlag" +
                ", [SendFlag] = @SendFlag, [PayFlag] = @PayFlag, [PayDate] = @PayDate, [EtcBillNu" +
                "m] = @EtcBillNum, [EtcBillYear] = @EtcBillYear, [Done] = @Done, [memo] = @memo, " +
                "[RebateType] = @RebateType, [RebateFee] = @RebateFee, [obunum] = @obunum, [Captu" +
                "reCP] = @CaptureCP, [IsSync] = @IsSync, [BankID] = @BankID, [BankAccountNum] = @" +
                "BankAccountNum, [CustomerID] = @CustomerID, [RecordTruckFlag] = @RecordTruckFlag" +
                ", [RecordVehicleID] = @RecordVehicleID, [DealTime] = @DealTime, [ProvinceID] = @" +
                "ProvinceID, [BindCP] = @BindCP, [RightPassfee] = @RightPassfee, [TACFlag] = @TAC" +
                "Flag, [PaySign] = @PaySign, [NetNo] = @NetNo, [CardCP] = @CardCP, [OBUID] = @OBU" +
                "ID, [BankRebateInfo] = @BankRebateInfo, [TaxFee] = @TaxFee, [InRoadNum] = @InRoa" +
                "dNum, [FeeVerNum] = @FeeVerNum WHERE (([DutyDate] = @Original_DutyDate) AND ([Op" +
                "eratorNum] = @Original_OperatorNum) AND ([StationID] = @Original_StationID) AND " +
                "([RoadNum] = @Original_RoadNum) AND ([ReachDateTime] = @Original_ReachDateTime) " +
                "AND ([VehicleID] = @Original_VehicleID) AND ([FreeType] = @Original_FreeType) AN" +
                "D ((@IsNull_FreeDes = 1 AND [FreeDes] IS NULL) OR ([FreeDes] = @Original_FreeDes" +
                ")) AND ([SpecialType] = @Original_SpecialType) AND ((@IsNull_ImageIndex = 1 AND " +
                "[ImageIndex] IS NULL) OR ([ImageIndex] = @Original_ImageIndex)) AND ([CardType] " +
                "= @Original_CardType) AND ([CardNum] = @Original_CardNum) AND ([InStationID] = @" +
                "Original_InStationID) AND ([InStationName] = @Original_InStationName) AND ([Pass" +
                "Fee] = @Original_PassFee) AND ((@IsNull_PrePayCash = 1 AND [PrePayCash] IS NULL)" +
                " OR ([PrePayCash] = @Original_PrePayCash)) AND ((@IsNull_RKCP = 1 AND [RKCP] IS " +
                "NULL) OR ([RKCP] = @Original_RKCP)) AND ([CKCP] = @Original_CKCP) AND ([BillNum]" +
                " = @Original_BillNum) AND ([ErrorBillSymbol] = @Original_ErrorBillSymbol) AND ((" +
                "@IsNull_InstationTime = 1 AND [InstationTime] IS NULL) OR ([InstationTime] = @Or" +
                "iginal_InstationTime)) AND ([ChangedFee] = @Original_ChangedFee) AND ([OperatorN" +
                "ame] = @Original_OperatorName) AND ([StationName] = @Original_StationName) AND (" +
                "[SCID] = @Original_SCID) AND ([SCNAME] = @Original_SCNAME) AND ([ZS] = @Original" +
                "_ZS) AND ([ZZS] = @Original_ZZS) AND ([ZZX] = @Original_ZZX) AND ([SFZZ] = @Orig" +
                "inal_SFZZ) AND ([ZX] = @Original_ZX) AND ((@IsNull_CXBL = 1 AND [CXBL] IS NULL) " +
                "OR ([CXBL] = @Original_CXBL)) AND ([ChargeFlag] = @Original_ChargeFlag) AND ([Is" +
                "Used] = @Original_IsUsed) AND ([PayCardBalance] = @Original_PayCardBalance) AND " +
                "((@IsNull_ETCTradeNo = 1 AND [ETCTradeNo] IS NULL) OR ([ETCTradeNo] = @Original_" +
                "ETCTradeNo)) AND ((@IsNull_ETCTac = 1 AND [ETCTac] IS NULL) OR ([ETCTac] = @Orig" +
                "inal_ETCTac)) AND ((@IsNull_ETCTermTradNo = 1 AND [ETCTermTradNo] IS NULL) OR ([" +
                "ETCTermTradNo] = @Original_ETCTermTradNo)) AND ((@IsNull_ETCTermCode = 1 AND [ET" +
                "CTermCode] IS NULL) OR ([ETCTermCode] = @Original_ETCTermCode)) AND ([ETCFlag] =" +
                " @Original_ETCFlag) AND ([CheckFlag] = @Original_CheckFlag) AND ([SendFlag] = @O" +
                "riginal_SendFlag) AND ([PayFlag] = @Original_PayFlag) AND ((@IsNull_PayDate = 1 " +
                "AND [PayDate] IS NULL) OR ([PayDate] = @Original_PayDate)) AND ([EtcBillNum] = @" +
                "Original_EtcBillNum) AND ([EtcBillYear] = @Original_EtcBillYear) AND ([Done] = @" +
                "Original_Done) AND ((@IsNull_memo = 1 AND [memo] IS NULL) OR ([memo] = @Original" +
                "_memo)) AND ((@IsNull_RebateType = 1 AND [RebateType] IS NULL) OR ([RebateType] " +
                "= @Original_RebateType)) AND ((@IsNull_RebateFee = 1 AND [RebateFee] IS NULL) OR" +
                " ([RebateFee] = @Original_RebateFee)) AND ([obunum] = @Original_obunum) AND ([Ca" +
                "ptureCP] = @Original_CaptureCP) AND ((@IsNull_IsSync = 1 AND [IsSync] IS NULL) O" +
                "R ([IsSync] = @Original_IsSync)) AND ((@IsNull_BankID = 1 AND [BankID] IS NULL) " +
                "OR ([BankID] = @Original_BankID)) AND ((@IsNull_BankAccountNum = 1 AND [BankAcco" +
                "untNum] IS NULL) OR ([BankAccountNum] = @Original_BankAccountNum)) AND ((@IsNull" +
                "_CustomerID = 1 AND [CustomerID] IS NULL) OR ([CustomerID] = @Original_CustomerI" +
                "D)) AND ((@IsNull_RecordTruckFlag = 1 AND [RecordTruckFlag] IS NULL) OR ([Record" +
                "TruckFlag] = @Original_RecordTruckFlag)) AND ((@IsNull_RecordVehicleID = 1 AND [" +
                "RecordVehicleID] IS NULL) OR ([RecordVehicleID] = @Original_RecordVehicleID)) AN" +
                "D ((@IsNull_DealTime = 1 AND [DealTime] IS NULL) OR ([DealTime] = @Original_Deal" +
                "Time)) AND ((@IsNull_ProvinceID = 1 AND [ProvinceID] IS NULL) OR ([ProvinceID] =" +
                " @Original_ProvinceID)) AND ((@IsNull_BindCP = 1 AND [BindCP] IS NULL) OR ([Bind" +
                "CP] = @Original_BindCP)) AND ((@IsNull_RightPassfee = 1 AND [RightPassfee] IS NU" +
                "LL) OR ([RightPassfee] = @Original_RightPassfee)) AND ((@IsNull_TACFlag = 1 AND " +
                "[TACFlag] IS NULL) OR ([TACFlag] = @Original_TACFlag)) AND ([PaySign] = @Origina" +
                "l_PaySign) AND ((@IsNull_NetNo = 1 AND [NetNo] IS NULL) OR ([NetNo] = @Original_" +
                "NetNo)) AND ((@IsNull_CardCP = 1 AND [CardCP] IS NULL) OR ([CardCP] = @Original_" +
                "CardCP)) AND ((@IsNull_OBUID = 1 AND [OBUID] IS NULL) OR ([OBUID] = @Original_OB" +
                "UID)) AND ((@IsNull_BankRebateInfo = 1 AND [BankRebateInfo] IS NULL) OR ([BankRe" +
                "bateInfo] = @Original_BankRebateInfo)) AND ((@IsNull_TaxFee = 1 AND [TaxFee] IS " +
                "NULL) OR ([TaxFee] = @Original_TaxFee)) AND ((@IsNull_InRoadNum = 1 AND [InRoadN" +
                "um] IS NULL) OR ([InRoadNum] = @Original_InRoadNum)) AND ((@IsNull_FeeVerNum = 1" +
                " AND [FeeVerNum] IS NULL) OR ([FeeVerNum] = @Original_FeeVerNum)));\r\nSELECT Duty" +
                "Date, OperatorNum, StationID, RoadNum, ReachDateTime, VehicleID, FreeType, FreeD" +
                "es, SpecialType, ImageIndex, CardType, CardNum, InStationID, InStationName, Pass" +
                "Fee, PrePayCash, RKCP, CKCP, BillNum, ErrorBillSymbol, InstationTime, ChangedFee" +
                ", OperatorName, StationName, SCID, SCNAME, ZS, ZZS, ZZX, SFZZ, ZX, CXBL, ChargeF" +
                "lag, IsUsed, PayCardBalance, ETCTradeNo, ETCTac, ETCTermTradNo, ETCTermCode, ETC" +
                "Flag, CheckFlag, SendFlag, PayFlag, PayDate, EtcBillNum, EtcBillYear, Done, memo" +
                ", RebateType, RebateFee, obunum, CaptureCP, IsSync, BankID, BankAccountNum, Cust" +
                "omerID, RecordTruckFlag, RecordVehicleID, DealTime, ProvinceID, BindCP, RightPas" +
                "sfee, TACFlag, PaySign, NetNo, CardCP, OBUID, BankRebateInfo, TaxFee, InRoadNum," +
                " FeeVerNum FROM nlieec.ETC_OutVehicle WHERE (BillNum = @BillNum) AND (CardNum = " +
                "@CardNum) AND (ETCFlag = @ETCFlag) AND (IsUsed = @IsUsed) AND (ReachDateTime = @" +
                "ReachDateTime) AND (RoadNum = @RoadNum) AND (StationID = @StationID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DutyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DutyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StationID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoadNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoadNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReachDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReachDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreeType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreeDes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeDes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImageIndex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageIndex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InStationID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InStationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InStationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InStationName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PassFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrePayCash", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrePayCash", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RKCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RKCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CKCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CKCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ErrorBillSymbol", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ErrorBillSymbol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InstationTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstationTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangedFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangedFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperatorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StationName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZS", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZZS", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZZS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZZX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 2, "ZZX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SFZZ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 2, "SFZZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXBL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 4, "CXBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChargeFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargeFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsUsed", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUsed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayCardBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayCardBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETCTradeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTradeNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETCTac", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETCTermTradNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermTradNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETCTermCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETCFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EtcBillNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtcBillNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EtcBillYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtcBillYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Done", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Done", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RebateType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RebateType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RebateFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 4, "RebateFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@obunum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "obunum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CaptureCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CaptureCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSync", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSync", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccountNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordTruckFlag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTruckFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordVehicleID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordVehicleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DealTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DealTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProvinceID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProvinceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BindCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BindCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RightPassfee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RightPassfee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TACFlag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaySign", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaySign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OBUID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OBUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankRebateInfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankRebateInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaxFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InRoadNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InRoadNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeeVerNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeeVerNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DutyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DutyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperatorNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StationID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoadNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoadNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReachDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReachDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreeType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FreeDes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeDes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreeDes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeDes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImageIndex", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageIndex", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageIndex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageIndex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InStationID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InStationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InStationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InStationName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PassFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrePayCash", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrePayCash", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrePayCash", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrePayCash", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RKCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RKCP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RKCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RKCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CKCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CKCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ErrorBillSymbol", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ErrorBillSymbol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InstationTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstationTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InstationTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstationTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangedFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangedFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperatorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StationName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZS", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZZS", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZZS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZZX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 2, "ZZX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SFZZ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 2, "SFZZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CXBL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXBL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXBL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 4, "CXBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChargeFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargeFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsUsed", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUsed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayCardBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayCardBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ETCTradeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTradeNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETCTradeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTradeNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ETCTac", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTac", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETCTac", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTac", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ETCTermTradNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermTradNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETCTermTradNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermTradNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ETCTermCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETCTermCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCTermCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETCFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETCFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CheckFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayFlag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PayDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EtcBillNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtcBillNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EtcBillYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtcBillYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Done", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Done", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_memo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "memo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "memo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RebateType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RebateType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RebateType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RebateType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RebateFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RebateFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RebateFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 4, "RebateFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_obunum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "obunum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CaptureCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CaptureCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsSync", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSync", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsSync", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSync", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankAccountNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankAccountNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordTruckFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTruckFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordTruckFlag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordTruckFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordVehicleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordVehicleID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordVehicleID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordVehicleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DealTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DealTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DealTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DealTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProvinceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProvinceID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProvinceID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProvinceID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BindCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BindCP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BindCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BindCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RightPassfee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RightPassfee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RightPassfee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RightPassfee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TACFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TACFlag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaySign", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaySign", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NetNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardCP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardCP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OBUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OBUID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OBUID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OBUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankRebateInfo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankRebateInfo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankRebateInfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankRebateInfo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TaxFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TaxFee", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InRoadNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InRoadNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InRoadNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InRoadNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FeeVerNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeeVerNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FeeVerNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeeVerNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::RDLC.Properties.Settings.Default.EtcCenter_testingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DutyDate, OperatorNum, StationID, RoadNum, ReachDateTime, VehicleID, FreeType, FreeDes, SpecialType, ImageIndex, CardType, CardNum, InStationID, InStationName, PassFee, PrePayCash, RKCP, CKCP, BillNum, ErrorBillSymbol, InstationTime, ChangedFee, OperatorName, StationName, SCID, SCNAME, ZS, ZZS, ZZX, SFZZ, ZX, CXBL, ChargeFlag, IsUsed, PayCardBalance, ETCTradeNo, ETCTac, ETCTermTradNo, ETCTermCode, ETCFlag, CheckFlag, SendFlag, PayFlag, PayDate, EtcBillNum, EtcBillYear, Done, memo, RebateType, RebateFee, obunum, CaptureCP, IsSync, BankID, BankAccountNum, CustomerID, RecordTruckFlag, RecordVehicleID, DealTime, ProvinceID, BindCP, RightPassfee, TACFlag, PaySign, NetNo, CardCP, OBUID, BankRebateInfo, TaxFee, InRoadNum, FeeVerNum FROM nlieec.ETC_OutVehicle";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EtcCenter_testingDataSet.ETC_OutVehicleDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EtcCenter_testingDataSet.ETC_OutVehicleDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EtcCenter_testingDataSet.ETC_OutVehicleDataTable dataTable = new EtcCenter_testingDataSet.ETC_OutVehicleDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EtcCenter_testingDataSet.ETC_OutVehicleDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EtcCenter_testingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ETC_OutVehicle");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    System.DateTime Original_DutyDate, 
                    string Original_OperatorNum, 
                    string Original_StationID, 
                    short Original_RoadNum, 
                    System.DateTime Original_ReachDateTime, 
                    short Original_VehicleID, 
                    short Original_FreeType, 
                    string Original_FreeDes, 
                    short Original_SpecialType, 
                    string Original_ImageIndex, 
                    short Original_CardType, 
                    string Original_CardNum, 
                    string Original_InStationID, 
                    string Original_InStationName, 
                    decimal Original_PassFee, 
                    global::System.Nullable<decimal> Original_PrePayCash, 
                    string Original_RKCP, 
                    string Original_CKCP, 
                    int Original_BillNum, 
                    short Original_ErrorBillSymbol, 
                    global::System.Nullable<global::System.DateTime> Original_InstationTime, 
                    decimal Original_ChangedFee, 
                    string Original_OperatorName, 
                    string Original_StationName, 
                    string Original_SCID, 
                    string Original_SCNAME, 
                    short Original_ZS, 
                    short Original_ZZS, 
                    decimal Original_ZZX, 
                    decimal Original_SFZZ, 
                    string Original_ZX, 
                    global::System.Nullable<decimal> Original_CXBL, 
                    short Original_ChargeFlag, 
                    short Original_IsUsed, 
                    decimal Original_PayCardBalance, 
                    global::System.Nullable<int> Original_ETCTradeNo, 
                    string Original_ETCTac, 
                    global::System.Nullable<int> Original_ETCTermTradNo, 
                    string Original_ETCTermCode, 
                    short Original_ETCFlag, 
                    short Original_CheckFlag, 
                    short Original_SendFlag, 
                    short Original_PayFlag, 
                    global::System.Nullable<global::System.DateTime> Original_PayDate, 
                    int Original_EtcBillNum, 
                    short Original_EtcBillYear, 
                    byte Original_Done, 
                    string Original_memo, 
                    global::System.Nullable<short> Original_RebateType, 
                    global::System.Nullable<decimal> Original_RebateFee, 
                    string Original_obunum, 
                    string Original_CaptureCP, 
                    global::System.Nullable<byte> Original_IsSync, 
                    string Original_BankID, 
                    string Original_BankAccountNum, 
                    string Original_CustomerID, 
                    global::System.Nullable<byte> Original_RecordTruckFlag, 
                    global::System.Nullable<byte> Original_RecordVehicleID, 
                    global::System.Nullable<global::System.DateTime> Original_DealTime, 
                    string Original_ProvinceID, 
                    string Original_BindCP, 
                    global::System.Nullable<decimal> Original_RightPassfee, 
                    global::System.Nullable<bool> Original_TACFlag, 
                    short Original_PaySign, 
                    string Original_NetNo, 
                    string Original_CardCP, 
                    string Original_OBUID, 
                    string Original_BankRebateInfo, 
                    global::System.Nullable<decimal> Original_TaxFee, 
                    global::System.Nullable<short> Original_InRoadNum, 
                    global::System.Nullable<short> Original_FeeVerNum) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_DutyDate));
            if ((Original_OperatorNum == null)) {
                throw new global::System.ArgumentNullException("Original_OperatorNum");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_OperatorNum));
            }
            if ((Original_StationID == null)) {
                throw new global::System.ArgumentNullException("Original_StationID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_StationID));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_RoadNum));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_ReachDateTime));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((short)(Original_VehicleID));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_FreeType));
            if ((Original_FreeDes == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_FreeDes));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((short)(Original_SpecialType));
            if ((Original_ImageIndex == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ImageIndex));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((short)(Original_CardType));
            if ((Original_CardNum == null)) {
                throw new global::System.ArgumentNullException("Original_CardNum");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_CardNum));
            }
            if ((Original_InStationID == null)) {
                throw new global::System.ArgumentNullException("Original_InStationID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_InStationID));
            }
            if ((Original_InStationName == null)) {
                throw new global::System.ArgumentNullException("Original_InStationName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_InStationName));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_PassFee));
            if ((Original_PrePayCash.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_PrePayCash.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_RKCP == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_RKCP));
            }
            if ((Original_CKCP == null)) {
                throw new global::System.ArgumentNullException("Original_CKCP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_CKCP));
            }
            this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_BillNum));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((short)(Original_ErrorBillSymbol));
            if ((Original_InstationTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_InstationTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_ChangedFee));
            if ((Original_OperatorName == null)) {
                throw new global::System.ArgumentNullException("Original_OperatorName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_OperatorName));
            }
            if ((Original_StationName == null)) {
                throw new global::System.ArgumentNullException("Original_StationName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_StationName));
            }
            if ((Original_SCID == null)) {
                throw new global::System.ArgumentNullException("Original_SCID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_SCID));
            }
            if ((Original_SCNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SCNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_SCNAME));
            }
            this.Adapter.DeleteCommand.Parameters[31].Value = ((short)(Original_ZS));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((short)(Original_ZZS));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((decimal)(Original_ZZX));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_SFZZ));
            if ((Original_ZX == null)) {
                throw new global::System.ArgumentNullException("Original_ZX");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_ZX));
            }
            if ((Original_CXBL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_CXBL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[38].Value = ((short)(Original_ChargeFlag));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((short)(Original_IsUsed));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_PayCardBalance));
            if ((Original_ETCTradeNo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_ETCTradeNo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_ETCTac == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_ETCTac));
            }
            if ((Original_ETCTermTradNo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_ETCTermTradNo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_ETCTermCode == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_ETCTermCode));
            }
            this.Adapter.DeleteCommand.Parameters[49].Value = ((short)(Original_ETCFlag));
            this.Adapter.DeleteCommand.Parameters[50].Value = ((short)(Original_CheckFlag));
            this.Adapter.DeleteCommand.Parameters[51].Value = ((short)(Original_SendFlag));
            this.Adapter.DeleteCommand.Parameters[52].Value = ((short)(Original_PayFlag));
            if ((Original_PayDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((System.DateTime)(Original_PayDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[55].Value = ((int)(Original_EtcBillNum));
            this.Adapter.DeleteCommand.Parameters[56].Value = ((short)(Original_EtcBillYear));
            this.Adapter.DeleteCommand.Parameters[57].Value = ((byte)(Original_Done));
            if ((Original_memo == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_memo));
            }
            if ((Original_RebateType.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((short)(Original_RebateType.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_RebateFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((decimal)(Original_RebateFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_obunum == null)) {
                throw new global::System.ArgumentNullException("Original_obunum");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_obunum));
            }
            if ((Original_CaptureCP == null)) {
                throw new global::System.ArgumentNullException("Original_CaptureCP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_CaptureCP));
            }
            if ((Original_IsSync.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((byte)(Original_IsSync.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_BankID == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_BankID));
            }
            if ((Original_BankAccountNum == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_BankAccountNum));
            }
            if ((Original_CustomerID == null)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((string)(Original_CustomerID));
            }
            if ((Original_RecordTruckFlag.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((byte)(Original_RecordTruckFlag.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_RecordVehicleID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((byte)(Original_RecordVehicleID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_DealTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((System.DateTime)(Original_DealTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_ProvinceID == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_ProvinceID));
            }
            if ((Original_BindCP == null)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_BindCP));
            }
            if ((Original_RightPassfee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((decimal)(Original_RightPassfee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_TACFlag.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((bool)(Original_TACFlag.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[88].Value = ((short)(Original_PaySign));
            if ((Original_NetNo == null)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_NetNo));
            }
            if ((Original_CardCP == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_CardCP));
            }
            if ((Original_OBUID == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_OBUID));
            }
            if ((Original_BankRebateInfo == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_BankRebateInfo));
            }
            if ((Original_TaxFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((decimal)(Original_TaxFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_InRoadNum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((short)(Original_InRoadNum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_FeeVerNum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((short)(Original_FeeVerNum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.DateTime DutyDate, 
                    string OperatorNum, 
                    string StationID, 
                    short RoadNum, 
                    System.DateTime ReachDateTime, 
                    short VehicleID, 
                    short FreeType, 
                    string FreeDes, 
                    short SpecialType, 
                    string ImageIndex, 
                    short CardType, 
                    string CardNum, 
                    string InStationID, 
                    string InStationName, 
                    decimal PassFee, 
                    global::System.Nullable<decimal> PrePayCash, 
                    string RKCP, 
                    string CKCP, 
                    int BillNum, 
                    short ErrorBillSymbol, 
                    global::System.Nullable<global::System.DateTime> InstationTime, 
                    decimal ChangedFee, 
                    string OperatorName, 
                    string StationName, 
                    string SCID, 
                    string SCNAME, 
                    short ZS, 
                    short ZZS, 
                    decimal ZZX, 
                    decimal SFZZ, 
                    string ZX, 
                    global::System.Nullable<decimal> CXBL, 
                    short ChargeFlag, 
                    short IsUsed, 
                    decimal PayCardBalance, 
                    global::System.Nullable<int> ETCTradeNo, 
                    string ETCTac, 
                    global::System.Nullable<int> ETCTermTradNo, 
                    string ETCTermCode, 
                    short ETCFlag, 
                    short CheckFlag, 
                    short SendFlag, 
                    short PayFlag, 
                    global::System.Nullable<global::System.DateTime> PayDate, 
                    int EtcBillNum, 
                    short EtcBillYear, 
                    byte Done, 
                    string memo, 
                    global::System.Nullable<short> RebateType, 
                    global::System.Nullable<decimal> RebateFee, 
                    string obunum, 
                    string CaptureCP, 
                    global::System.Nullable<byte> IsSync, 
                    string BankID, 
                    string BankAccountNum, 
                    string CustomerID, 
                    global::System.Nullable<byte> RecordTruckFlag, 
                    global::System.Nullable<byte> RecordVehicleID, 
                    global::System.Nullable<global::System.DateTime> DealTime, 
                    string ProvinceID, 
                    string BindCP, 
                    global::System.Nullable<decimal> RightPassfee, 
                    global::System.Nullable<bool> TACFlag, 
                    short PaySign, 
                    string NetNo, 
                    string CardCP, 
                    string OBUID, 
                    string BankRebateInfo, 
                    global::System.Nullable<decimal> TaxFee, 
                    global::System.Nullable<short> InRoadNum, 
                    global::System.Nullable<short> FeeVerNum) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(DutyDate));
            if ((OperatorNum == null)) {
                throw new global::System.ArgumentNullException("OperatorNum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(OperatorNum));
            }
            if ((StationID == null)) {
                throw new global::System.ArgumentNullException("StationID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(StationID));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((short)(RoadNum));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ReachDateTime));
            this.Adapter.InsertCommand.Parameters[5].Value = ((short)(VehicleID));
            this.Adapter.InsertCommand.Parameters[6].Value = ((short)(FreeType));
            if ((FreeDes == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(FreeDes));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((short)(SpecialType));
            if ((ImageIndex == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ImageIndex));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((short)(CardType));
            if ((CardNum == null)) {
                throw new global::System.ArgumentNullException("CardNum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CardNum));
            }
            if ((InStationID == null)) {
                throw new global::System.ArgumentNullException("InStationID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(InStationID));
            }
            if ((InStationName == null)) {
                throw new global::System.ArgumentNullException("InStationName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(InStationName));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(PassFee));
            if ((PrePayCash.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(PrePayCash.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((RKCP == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(RKCP));
            }
            if ((CKCP == null)) {
                throw new global::System.ArgumentNullException("CKCP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(CKCP));
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(BillNum));
            this.Adapter.InsertCommand.Parameters[19].Value = ((short)(ErrorBillSymbol));
            if ((InstationTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(InstationTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(ChangedFee));
            if ((OperatorName == null)) {
                throw new global::System.ArgumentNullException("OperatorName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(OperatorName));
            }
            if ((StationName == null)) {
                throw new global::System.ArgumentNullException("StationName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(StationName));
            }
            if ((SCID == null)) {
                throw new global::System.ArgumentNullException("SCID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(SCID));
            }
            if ((SCNAME == null)) {
                throw new global::System.ArgumentNullException("SCNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(SCNAME));
            }
            this.Adapter.InsertCommand.Parameters[26].Value = ((short)(ZS));
            this.Adapter.InsertCommand.Parameters[27].Value = ((short)(ZZS));
            this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(ZZX));
            this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(SFZZ));
            if ((ZX == null)) {
                throw new global::System.ArgumentNullException("ZX");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(ZX));
            }
            if ((CXBL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(CXBL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((short)(ChargeFlag));
            this.Adapter.InsertCommand.Parameters[33].Value = ((short)(IsUsed));
            this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(PayCardBalance));
            if ((ETCTradeNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(ETCTradeNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ETCTac == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(ETCTac));
            }
            if ((ETCTermTradNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(ETCTermTradNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ETCTermCode == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(ETCTermCode));
            }
            this.Adapter.InsertCommand.Parameters[39].Value = ((short)(ETCFlag));
            this.Adapter.InsertCommand.Parameters[40].Value = ((short)(CheckFlag));
            this.Adapter.InsertCommand.Parameters[41].Value = ((short)(SendFlag));
            this.Adapter.InsertCommand.Parameters[42].Value = ((short)(PayFlag));
            if ((PayDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(PayDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[44].Value = ((int)(EtcBillNum));
            this.Adapter.InsertCommand.Parameters[45].Value = ((short)(EtcBillYear));
            this.Adapter.InsertCommand.Parameters[46].Value = ((byte)(Done));
            if ((memo == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(memo));
            }
            if ((RebateType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((short)(RebateType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((RebateFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(RebateFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((obunum == null)) {
                throw new global::System.ArgumentNullException("obunum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(obunum));
            }
            if ((CaptureCP == null)) {
                throw new global::System.ArgumentNullException("CaptureCP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(CaptureCP));
            }
            if ((IsSync.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((byte)(IsSync.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((BankID == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(BankID));
            }
            if ((BankAccountNum == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(BankAccountNum));
            }
            if ((CustomerID == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(CustomerID));
            }
            if ((RecordTruckFlag.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((byte)(RecordTruckFlag.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((RecordVehicleID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((byte)(RecordVehicleID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((DealTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((System.DateTime)(DealTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((ProvinceID == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(ProvinceID));
            }
            if ((BindCP == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(BindCP));
            }
            if ((RightPassfee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((decimal)(RightPassfee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((TACFlag.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((bool)(TACFlag.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[63].Value = ((short)(PaySign));
            if ((NetNo == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(NetNo));
            }
            if ((CardCP == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(CardCP));
            }
            if ((OBUID == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(OBUID));
            }
            if ((BankRebateInfo == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(BankRebateInfo));
            }
            if ((TaxFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((decimal)(TaxFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((InRoadNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((short)(InRoadNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((FeeVerNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((short)(FeeVerNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime DutyDate, 
                    string OperatorNum, 
                    string StationID, 
                    short RoadNum, 
                    System.DateTime ReachDateTime, 
                    short VehicleID, 
                    short FreeType, 
                    string FreeDes, 
                    short SpecialType, 
                    string ImageIndex, 
                    short CardType, 
                    string CardNum, 
                    string InStationID, 
                    string InStationName, 
                    decimal PassFee, 
                    global::System.Nullable<decimal> PrePayCash, 
                    string RKCP, 
                    string CKCP, 
                    int BillNum, 
                    short ErrorBillSymbol, 
                    global::System.Nullable<global::System.DateTime> InstationTime, 
                    decimal ChangedFee, 
                    string OperatorName, 
                    string StationName, 
                    string SCID, 
                    string SCNAME, 
                    short ZS, 
                    short ZZS, 
                    decimal ZZX, 
                    decimal SFZZ, 
                    string ZX, 
                    global::System.Nullable<decimal> CXBL, 
                    short ChargeFlag, 
                    short IsUsed, 
                    decimal PayCardBalance, 
                    global::System.Nullable<int> ETCTradeNo, 
                    string ETCTac, 
                    global::System.Nullable<int> ETCTermTradNo, 
                    string ETCTermCode, 
                    short ETCFlag, 
                    short CheckFlag, 
                    short SendFlag, 
                    short PayFlag, 
                    global::System.Nullable<global::System.DateTime> PayDate, 
                    int EtcBillNum, 
                    short EtcBillYear, 
                    byte Done, 
                    string memo, 
                    global::System.Nullable<short> RebateType, 
                    global::System.Nullable<decimal> RebateFee, 
                    string obunum, 
                    string CaptureCP, 
                    global::System.Nullable<byte> IsSync, 
                    string BankID, 
                    string BankAccountNum, 
                    string CustomerID, 
                    global::System.Nullable<byte> RecordTruckFlag, 
                    global::System.Nullable<byte> RecordVehicleID, 
                    global::System.Nullable<global::System.DateTime> DealTime, 
                    string ProvinceID, 
                    string BindCP, 
                    global::System.Nullable<decimal> RightPassfee, 
                    global::System.Nullable<bool> TACFlag, 
                    short PaySign, 
                    string NetNo, 
                    string CardCP, 
                    string OBUID, 
                    string BankRebateInfo, 
                    global::System.Nullable<decimal> TaxFee, 
                    global::System.Nullable<short> InRoadNum, 
                    global::System.Nullable<short> FeeVerNum, 
                    System.DateTime Original_DutyDate, 
                    string Original_OperatorNum, 
                    string Original_StationID, 
                    short Original_RoadNum, 
                    System.DateTime Original_ReachDateTime, 
                    short Original_VehicleID, 
                    short Original_FreeType, 
                    string Original_FreeDes, 
                    short Original_SpecialType, 
                    string Original_ImageIndex, 
                    short Original_CardType, 
                    string Original_CardNum, 
                    string Original_InStationID, 
                    string Original_InStationName, 
                    decimal Original_PassFee, 
                    global::System.Nullable<decimal> Original_PrePayCash, 
                    string Original_RKCP, 
                    string Original_CKCP, 
                    int Original_BillNum, 
                    short Original_ErrorBillSymbol, 
                    global::System.Nullable<global::System.DateTime> Original_InstationTime, 
                    decimal Original_ChangedFee, 
                    string Original_OperatorName, 
                    string Original_StationName, 
                    string Original_SCID, 
                    string Original_SCNAME, 
                    short Original_ZS, 
                    short Original_ZZS, 
                    decimal Original_ZZX, 
                    decimal Original_SFZZ, 
                    string Original_ZX, 
                    global::System.Nullable<decimal> Original_CXBL, 
                    short Original_ChargeFlag, 
                    short Original_IsUsed, 
                    decimal Original_PayCardBalance, 
                    global::System.Nullable<int> Original_ETCTradeNo, 
                    string Original_ETCTac, 
                    global::System.Nullable<int> Original_ETCTermTradNo, 
                    string Original_ETCTermCode, 
                    short Original_ETCFlag, 
                    short Original_CheckFlag, 
                    short Original_SendFlag, 
                    short Original_PayFlag, 
                    global::System.Nullable<global::System.DateTime> Original_PayDate, 
                    int Original_EtcBillNum, 
                    short Original_EtcBillYear, 
                    byte Original_Done, 
                    string Original_memo, 
                    global::System.Nullable<short> Original_RebateType, 
                    global::System.Nullable<decimal> Original_RebateFee, 
                    string Original_obunum, 
                    string Original_CaptureCP, 
                    global::System.Nullable<byte> Original_IsSync, 
                    string Original_BankID, 
                    string Original_BankAccountNum, 
                    string Original_CustomerID, 
                    global::System.Nullable<byte> Original_RecordTruckFlag, 
                    global::System.Nullable<byte> Original_RecordVehicleID, 
                    global::System.Nullable<global::System.DateTime> Original_DealTime, 
                    string Original_ProvinceID, 
                    string Original_BindCP, 
                    global::System.Nullable<decimal> Original_RightPassfee, 
                    global::System.Nullable<bool> Original_TACFlag, 
                    short Original_PaySign, 
                    string Original_NetNo, 
                    string Original_CardCP, 
                    string Original_OBUID, 
                    string Original_BankRebateInfo, 
                    global::System.Nullable<decimal> Original_TaxFee, 
                    global::System.Nullable<short> Original_InRoadNum, 
                    global::System.Nullable<short> Original_FeeVerNum) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(DutyDate));
            if ((OperatorNum == null)) {
                throw new global::System.ArgumentNullException("OperatorNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(OperatorNum));
            }
            if ((StationID == null)) {
                throw new global::System.ArgumentNullException("StationID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(StationID));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(RoadNum));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ReachDateTime));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(VehicleID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(FreeType));
            if ((FreeDes == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(FreeDes));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(SpecialType));
            if ((ImageIndex == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ImageIndex));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((short)(CardType));
            if ((CardNum == null)) {
                throw new global::System.ArgumentNullException("CardNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CardNum));
            }
            if ((InStationID == null)) {
                throw new global::System.ArgumentNullException("InStationID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(InStationID));
            }
            if ((InStationName == null)) {
                throw new global::System.ArgumentNullException("InStationName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(InStationName));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(PassFee));
            if ((PrePayCash.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(PrePayCash.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((RKCP == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(RKCP));
            }
            if ((CKCP == null)) {
                throw new global::System.ArgumentNullException("CKCP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(CKCP));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(BillNum));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((short)(ErrorBillSymbol));
            if ((InstationTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(InstationTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(ChangedFee));
            if ((OperatorName == null)) {
                throw new global::System.ArgumentNullException("OperatorName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(OperatorName));
            }
            if ((StationName == null)) {
                throw new global::System.ArgumentNullException("StationName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(StationName));
            }
            if ((SCID == null)) {
                throw new global::System.ArgumentNullException("SCID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(SCID));
            }
            if ((SCNAME == null)) {
                throw new global::System.ArgumentNullException("SCNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(SCNAME));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((short)(ZS));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((short)(ZZS));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(ZZX));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(SFZZ));
            if ((ZX == null)) {
                throw new global::System.ArgumentNullException("ZX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(ZX));
            }
            if ((CXBL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(CXBL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((short)(ChargeFlag));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((short)(IsUsed));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(PayCardBalance));
            if ((ETCTradeNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(ETCTradeNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ETCTac == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(ETCTac));
            }
            if ((ETCTermTradNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(ETCTermTradNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ETCTermCode == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(ETCTermCode));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((short)(ETCFlag));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((short)(CheckFlag));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((short)(SendFlag));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((short)(PayFlag));
            if ((PayDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(PayDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(EtcBillNum));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((short)(EtcBillYear));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((byte)(Done));
            if ((memo == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(memo));
            }
            if ((RebateType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((short)(RebateType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((RebateFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(RebateFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((obunum == null)) {
                throw new global::System.ArgumentNullException("obunum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(obunum));
            }
            if ((CaptureCP == null)) {
                throw new global::System.ArgumentNullException("CaptureCP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(CaptureCP));
            }
            if ((IsSync.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((byte)(IsSync.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((BankID == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(BankID));
            }
            if ((BankAccountNum == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(BankAccountNum));
            }
            if ((CustomerID == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(CustomerID));
            }
            if ((RecordTruckFlag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((byte)(RecordTruckFlag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((RecordVehicleID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((byte)(RecordVehicleID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((DealTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((System.DateTime)(DealTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((ProvinceID == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(ProvinceID));
            }
            if ((BindCP == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(BindCP));
            }
            if ((RightPassfee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(RightPassfee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((TACFlag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(TACFlag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((short)(PaySign));
            if ((NetNo == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(NetNo));
            }
            if ((CardCP == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(CardCP));
            }
            if ((OBUID == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(OBUID));
            }
            if ((BankRebateInfo == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(BankRebateInfo));
            }
            if ((TaxFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((decimal)(TaxFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((InRoadNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((short)(InRoadNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((FeeVerNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((short)(FeeVerNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[71].Value = ((System.DateTime)(Original_DutyDate));
            if ((Original_OperatorNum == null)) {
                throw new global::System.ArgumentNullException("Original_OperatorNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_OperatorNum));
            }
            if ((Original_StationID == null)) {
                throw new global::System.ArgumentNullException("Original_StationID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_StationID));
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((short)(Original_RoadNum));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(Original_ReachDateTime));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((short)(Original_VehicleID));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((short)(Original_FreeType));
            if ((Original_FreeDes == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_FreeDes));
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((short)(Original_SpecialType));
            if ((Original_ImageIndex == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_ImageIndex));
            }
            this.Adapter.UpdateCommand.Parameters[83].Value = ((short)(Original_CardType));
            if ((Original_CardNum == null)) {
                throw new global::System.ArgumentNullException("Original_CardNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_CardNum));
            }
            if ((Original_InStationID == null)) {
                throw new global::System.ArgumentNullException("Original_InStationID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_InStationID));
            }
            if ((Original_InStationName == null)) {
                throw new global::System.ArgumentNullException("Original_InStationName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_InStationName));
            }
            this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_PassFee));
            if ((Original_PrePayCash.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(Original_PrePayCash.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_RKCP == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_RKCP));
            }
            if ((Original_CKCP == null)) {
                throw new global::System.ArgumentNullException("Original_CKCP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_CKCP));
            }
            this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(Original_BillNum));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((short)(Original_ErrorBillSymbol));
            if ((Original_InstationTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((System.DateTime)(Original_InstationTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(Original_ChangedFee));
            if ((Original_OperatorName == null)) {
                throw new global::System.ArgumentNullException("Original_OperatorName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_OperatorName));
            }
            if ((Original_StationName == null)) {
                throw new global::System.ArgumentNullException("Original_StationName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_StationName));
            }
            if ((Original_SCID == null)) {
                throw new global::System.ArgumentNullException("Original_SCID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_SCID));
            }
            if ((Original_SCNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SCNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_SCNAME));
            }
            this.Adapter.UpdateCommand.Parameters[102].Value = ((short)(Original_ZS));
            this.Adapter.UpdateCommand.Parameters[103].Value = ((short)(Original_ZZS));
            this.Adapter.UpdateCommand.Parameters[104].Value = ((decimal)(Original_ZZX));
            this.Adapter.UpdateCommand.Parameters[105].Value = ((decimal)(Original_SFZZ));
            if ((Original_ZX == null)) {
                throw new global::System.ArgumentNullException("Original_ZX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_ZX));
            }
            if ((Original_CXBL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((decimal)(Original_CXBL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[109].Value = ((short)(Original_ChargeFlag));
            this.Adapter.UpdateCommand.Parameters[110].Value = ((short)(Original_IsUsed));
            this.Adapter.UpdateCommand.Parameters[111].Value = ((decimal)(Original_PayCardBalance));
            if ((Original_ETCTradeNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(Original_ETCTradeNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_ETCTac == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_ETCTac));
            }
            if ((Original_ETCTermTradNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((int)(Original_ETCTermTradNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_ETCTermCode == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_ETCTermCode));
            }
            this.Adapter.UpdateCommand.Parameters[120].Value = ((short)(Original_ETCFlag));
            this.Adapter.UpdateCommand.Parameters[121].Value = ((short)(Original_CheckFlag));
            this.Adapter.UpdateCommand.Parameters[122].Value = ((short)(Original_SendFlag));
            this.Adapter.UpdateCommand.Parameters[123].Value = ((short)(Original_PayFlag));
            if ((Original_PayDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((System.DateTime)(Original_PayDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[126].Value = ((int)(Original_EtcBillNum));
            this.Adapter.UpdateCommand.Parameters[127].Value = ((short)(Original_EtcBillYear));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((byte)(Original_Done));
            if ((Original_memo == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(Original_memo));
            }
            if ((Original_RebateType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((short)(Original_RebateType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_RebateFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((decimal)(Original_RebateFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_obunum == null)) {
                throw new global::System.ArgumentNullException("Original_obunum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_obunum));
            }
            if ((Original_CaptureCP == null)) {
                throw new global::System.ArgumentNullException("Original_CaptureCP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((string)(Original_CaptureCP));
            }
            if ((Original_IsSync.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((byte)(Original_IsSync.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_BankID == null)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(Original_BankID));
            }
            if ((Original_BankAccountNum == null)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((string)(Original_BankAccountNum));
            }
            if ((Original_CustomerID == null)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((string)(Original_CustomerID));
            }
            if ((Original_RecordTruckFlag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((byte)(Original_RecordTruckFlag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_RecordVehicleID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((byte)(Original_RecordVehicleID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_DealTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((System.DateTime)(Original_DealTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_ProvinceID == null)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(Original_ProvinceID));
            }
            if ((Original_BindCP == null)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((string)(Original_BindCP));
            }
            if ((Original_RightPassfee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((decimal)(Original_RightPassfee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_TACFlag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((bool)(Original_TACFlag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[159].Value = ((short)(Original_PaySign));
            if ((Original_NetNo == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(Original_NetNo));
            }
            if ((Original_CardCP == null)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((string)(Original_CardCP));
            }
            if ((Original_OBUID == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_OBUID));
            }
            if ((Original_BankRebateInfo == null)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((string)(Original_BankRebateInfo));
            }
            if ((Original_TaxFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((decimal)(Original_TaxFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_InRoadNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((short)(Original_InRoadNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_FeeVerNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((short)(Original_FeeVerNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime DutyDate, 
                    string OperatorNum, 
                    short VehicleID, 
                    short FreeType, 
                    string FreeDes, 
                    short SpecialType, 
                    string ImageIndex, 
                    short CardType, 
                    string InStationID, 
                    string InStationName, 
                    decimal PassFee, 
                    global::System.Nullable<decimal> PrePayCash, 
                    string RKCP, 
                    string CKCP, 
                    short ErrorBillSymbol, 
                    global::System.Nullable<global::System.DateTime> InstationTime, 
                    decimal ChangedFee, 
                    string OperatorName, 
                    string StationName, 
                    string SCID, 
                    string SCNAME, 
                    short ZS, 
                    short ZZS, 
                    decimal ZZX, 
                    decimal SFZZ, 
                    string ZX, 
                    global::System.Nullable<decimal> CXBL, 
                    short ChargeFlag, 
                    decimal PayCardBalance, 
                    global::System.Nullable<int> ETCTradeNo, 
                    string ETCTac, 
                    global::System.Nullable<int> ETCTermTradNo, 
                    string ETCTermCode, 
                    short CheckFlag, 
                    short SendFlag, 
                    short PayFlag, 
                    global::System.Nullable<global::System.DateTime> PayDate, 
                    int EtcBillNum, 
                    short EtcBillYear, 
                    byte Done, 
                    string memo, 
                    global::System.Nullable<short> RebateType, 
                    global::System.Nullable<decimal> RebateFee, 
                    string obunum, 
                    string CaptureCP, 
                    global::System.Nullable<byte> IsSync, 
                    string BankID, 
                    string BankAccountNum, 
                    string CustomerID, 
                    global::System.Nullable<byte> RecordTruckFlag, 
                    global::System.Nullable<byte> RecordVehicleID, 
                    global::System.Nullable<global::System.DateTime> DealTime, 
                    string ProvinceID, 
                    string BindCP, 
                    global::System.Nullable<decimal> RightPassfee, 
                    global::System.Nullable<bool> TACFlag, 
                    short PaySign, 
                    string NetNo, 
                    string CardCP, 
                    string OBUID, 
                    string BankRebateInfo, 
                    global::System.Nullable<decimal> TaxFee, 
                    global::System.Nullable<short> InRoadNum, 
                    global::System.Nullable<short> FeeVerNum, 
                    System.DateTime Original_DutyDate, 
                    string Original_OperatorNum, 
                    string Original_StationID, 
                    short Original_RoadNum, 
                    System.DateTime Original_ReachDateTime, 
                    short Original_VehicleID, 
                    short Original_FreeType, 
                    string Original_FreeDes, 
                    short Original_SpecialType, 
                    string Original_ImageIndex, 
                    short Original_CardType, 
                    string Original_CardNum, 
                    string Original_InStationID, 
                    string Original_InStationName, 
                    decimal Original_PassFee, 
                    global::System.Nullable<decimal> Original_PrePayCash, 
                    string Original_RKCP, 
                    string Original_CKCP, 
                    int Original_BillNum, 
                    short Original_ErrorBillSymbol, 
                    global::System.Nullable<global::System.DateTime> Original_InstationTime, 
                    decimal Original_ChangedFee, 
                    string Original_OperatorName, 
                    string Original_StationName, 
                    string Original_SCID, 
                    string Original_SCNAME, 
                    short Original_ZS, 
                    short Original_ZZS, 
                    decimal Original_ZZX, 
                    decimal Original_SFZZ, 
                    string Original_ZX, 
                    global::System.Nullable<decimal> Original_CXBL, 
                    short Original_ChargeFlag, 
                    short Original_IsUsed, 
                    decimal Original_PayCardBalance, 
                    global::System.Nullable<int> Original_ETCTradeNo, 
                    string Original_ETCTac, 
                    global::System.Nullable<int> Original_ETCTermTradNo, 
                    string Original_ETCTermCode, 
                    short Original_ETCFlag, 
                    short Original_CheckFlag, 
                    short Original_SendFlag, 
                    short Original_PayFlag, 
                    global::System.Nullable<global::System.DateTime> Original_PayDate, 
                    int Original_EtcBillNum, 
                    short Original_EtcBillYear, 
                    byte Original_Done, 
                    string Original_memo, 
                    global::System.Nullable<short> Original_RebateType, 
                    global::System.Nullable<decimal> Original_RebateFee, 
                    string Original_obunum, 
                    string Original_CaptureCP, 
                    global::System.Nullable<byte> Original_IsSync, 
                    string Original_BankID, 
                    string Original_BankAccountNum, 
                    string Original_CustomerID, 
                    global::System.Nullable<byte> Original_RecordTruckFlag, 
                    global::System.Nullable<byte> Original_RecordVehicleID, 
                    global::System.Nullable<global::System.DateTime> Original_DealTime, 
                    string Original_ProvinceID, 
                    string Original_BindCP, 
                    global::System.Nullable<decimal> Original_RightPassfee, 
                    global::System.Nullable<bool> Original_TACFlag, 
                    short Original_PaySign, 
                    string Original_NetNo, 
                    string Original_CardCP, 
                    string Original_OBUID, 
                    string Original_BankRebateInfo, 
                    global::System.Nullable<decimal> Original_TaxFee, 
                    global::System.Nullable<short> Original_InRoadNum, 
                    global::System.Nullable<short> Original_FeeVerNum) {
            return this.Update(DutyDate, OperatorNum, Original_StationID, Original_RoadNum, Original_ReachDateTime, VehicleID, FreeType, FreeDes, SpecialType, ImageIndex, CardType, Original_CardNum, InStationID, InStationName, PassFee, PrePayCash, RKCP, CKCP, Original_BillNum, ErrorBillSymbol, InstationTime, ChangedFee, OperatorName, StationName, SCID, SCNAME, ZS, ZZS, ZZX, SFZZ, ZX, CXBL, ChargeFlag, Original_IsUsed, PayCardBalance, ETCTradeNo, ETCTac, ETCTermTradNo, ETCTermCode, Original_ETCFlag, CheckFlag, SendFlag, PayFlag, PayDate, EtcBillNum, EtcBillYear, Done, memo, RebateType, RebateFee, obunum, CaptureCP, IsSync, BankID, BankAccountNum, CustomerID, RecordTruckFlag, RecordVehicleID, DealTime, ProvinceID, BindCP, RightPassfee, TACFlag, PaySign, NetNo, CardCP, OBUID, BankRebateInfo, TaxFee, InRoadNum, FeeVerNum, Original_DutyDate, Original_OperatorNum, Original_StationID, Original_RoadNum, Original_ReachDateTime, Original_VehicleID, Original_FreeType, Original_FreeDes, Original_SpecialType, Original_ImageIndex, Original_CardType, Original_CardNum, Original_InStationID, Original_InStationName, Original_PassFee, Original_PrePayCash, Original_RKCP, Original_CKCP, Original_BillNum, Original_ErrorBillSymbol, Original_InstationTime, Original_ChangedFee, Original_OperatorName, Original_StationName, Original_SCID, Original_SCNAME, Original_ZS, Original_ZZS, Original_ZZX, Original_SFZZ, Original_ZX, Original_CXBL, Original_ChargeFlag, Original_IsUsed, Original_PayCardBalance, Original_ETCTradeNo, Original_ETCTac, Original_ETCTermTradNo, Original_ETCTermCode, Original_ETCFlag, Original_CheckFlag, Original_SendFlag, Original_PayFlag, Original_PayDate, Original_EtcBillNum, Original_EtcBillYear, Original_Done, Original_memo, Original_RebateType, Original_RebateFee, Original_obunum, Original_CaptureCP, Original_IsSync, Original_BankID, Original_BankAccountNum, Original_CustomerID, Original_RecordTruckFlag, Original_RecordVehicleID, Original_DealTime, Original_ProvinceID, Original_BindCP, Original_RightPassfee, Original_TACFlag, Original_PaySign, Original_NetNo, Original_CardCP, Original_OBUID, Original_BankRebateInfo, Original_TaxFee, Original_InRoadNum, Original_FeeVerNum);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private GA_DebitVehicleTableAdapter _gA_DebitVehicleTableAdapter;
        
        private ETC_OutVehicleTableAdapter _eTC_OutVehicleTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public GA_DebitVehicleTableAdapter GA_DebitVehicleTableAdapter {
            get {
                return this._gA_DebitVehicleTableAdapter;
            }
            set {
                this._gA_DebitVehicleTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ETC_OutVehicleTableAdapter ETC_OutVehicleTableAdapter {
            get {
                return this._eTC_OutVehicleTableAdapter;
            }
            set {
                this._eTC_OutVehicleTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._gA_DebitVehicleTableAdapter != null) 
                            && (this._gA_DebitVehicleTableAdapter.Connection != null))) {
                    return this._gA_DebitVehicleTableAdapter.Connection;
                }
                if (((this._eTC_OutVehicleTableAdapter != null) 
                            && (this._eTC_OutVehicleTableAdapter.Connection != null))) {
                    return this._eTC_OutVehicleTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._gA_DebitVehicleTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eTC_OutVehicleTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(EtcCenter_testingDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._eTC_OutVehicleTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ETC_OutVehicle.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eTC_OutVehicleTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gA_DebitVehicleTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GA_DebitVehicle.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gA_DebitVehicleTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(EtcCenter_testingDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._eTC_OutVehicleTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ETC_OutVehicle.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eTC_OutVehicleTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gA_DebitVehicleTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GA_DebitVehicle.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gA_DebitVehicleTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(EtcCenter_testingDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._gA_DebitVehicleTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GA_DebitVehicle.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gA_DebitVehicleTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eTC_OutVehicleTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ETC_OutVehicle.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eTC_OutVehicleTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(EtcCenter_testingDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._gA_DebitVehicleTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gA_DebitVehicleTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._eTC_OutVehicleTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eTC_OutVehicleTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._gA_DebitVehicleTableAdapter != null)) {
                    revertConnections.Add(this._gA_DebitVehicleTableAdapter, this._gA_DebitVehicleTableAdapter.Connection);
                    this._gA_DebitVehicleTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._gA_DebitVehicleTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._gA_DebitVehicleTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gA_DebitVehicleTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gA_DebitVehicleTableAdapter.Adapter);
                    }
                }
                if ((this._eTC_OutVehicleTableAdapter != null)) {
                    revertConnections.Add(this._eTC_OutVehicleTableAdapter, this._eTC_OutVehicleTableAdapter.Connection);
                    this._eTC_OutVehicleTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eTC_OutVehicleTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eTC_OutVehicleTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eTC_OutVehicleTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eTC_OutVehicleTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._gA_DebitVehicleTableAdapter != null)) {
                    this._gA_DebitVehicleTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._gA_DebitVehicleTableAdapter]));
                    this._gA_DebitVehicleTableAdapter.Transaction = null;
                }
                if ((this._eTC_OutVehicleTableAdapter != null)) {
                    this._eTC_OutVehicleTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eTC_OutVehicleTableAdapter]));
                    this._eTC_OutVehicleTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591